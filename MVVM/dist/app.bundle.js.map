{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./src/style.css","webpack:///./src/style.css?7528","webpack:///./src/print.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/san/dist/san.dev.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","e","t","g","this","Function","eval","window","css","location","Error","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","indexOf","JSON","stringify","fn","memo","stylesInDom","isOldIE","document","all","atob","apply","arguments","getElement","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","options","length","item","domStyle","id","refs","j","parts","push","addStyle","listToStyles","list","newStyles","base","part","media","sourceMap","insertStyleElement","style","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","splice","createStyleElement","createElement","attrs","type","addAttrs","el","keys","forEach","key","setAttribute","obj","update","remove","result","transform","styleIndex","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","join","cssNode","childNodes","useSourceMap","toString","map","content","cssMapping","sourceMapping","sourceURLs","sources","source","sourceRoot","concat","mediaQuery","alreadyImportedModules","hmr","locals","console","log","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","Item","array","noop","nextTick","args","Array","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","global","undefined","setImmediate","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","getPrototypeOf","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","Math","random","event","data","slice","addEventListener","attachEvent","MessageChannel","port1","port2","documentElement","script","onreadystatechange","callback","task","clearImmediate","self","scope","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","root","guidIndex","guidPrefix","Date","getTime","guid","empty","extend","inherits","subClass","superClass","subClassProto","F","constructor","each","iterator","func","thisArg","nativeBind","eventName","listener","capture","splitStr2Obj","split","svgTags","createEl","tagName","createElementNS","removeEl","nextHandler","nextTasks","isNativePromise","Promise","tasks","port","resolve","then","ieVersionMatch","navigator","userAgent","match","ie","ieOldThan9","trigger","createEvent","initEvent","dispatchEvent","activeElement","autoCloseTags","ANONYMOUS_CLASS_NAME","getDataType","nodeType","toLowerCase","createChainableChecker","validate","chainedChecker","isRequired","checkType","dataName","componentName","fullDataName","dataValue","dataType","createPrimaryTypeChecker","DataTypes","Walker","createANode","textExpr","directives","props","events","children","kebab2camel","alpha","toUpperCase","any","string","number","bool","symbol","arrayOf","arrayItemChecker","instanceOf","expectedClass","dataValueClassName","expectedClassName","shape","shapeTypes","shapeKeyName","checker","oneOf","expectedEnumValues","oneOfType","expectedEnumOfTypeValues","objectOf","typeChecker","dataKeyName","exact","secret","dataValueType","allKeys","currentCode","charCode","cut","start","end","go","distance","nextCode","charCodeAt","goUntil","code","reg","lastIndex","exec","ExprType","STRING","NUMBER","BOOL","ACCESSOR","INTERP","CALL","TEXT","BINARY","UNARY","TERTIARY","createAccessor","paths","readIdent","walker","readTertiaryExpr","conditional","readLogicalORExpr","expr","readLogicalANDExpr","readRelationalExpr","operator","segs","yesExpr","readAccessor","firstSeg","accessorLoop","readUnaryExpr","startCode","startIndex","walkLoop","literal","readMultiplicativeExpr","readAdditiveExpr","parseExpr","raw","readCall","defaultArgs","ident","parseCall","parseInterp","interp","filters","callExpr","original","ENTITY_DECODE_MAP","lt","gt","nbsp","quot","emsp","ensp","thinsp","copy","zwnj","zwj","amp","regexpLiteral","parseText","delimiters","exprMatch","exprStartReg","RegExp","beforeIndex","pushStringToSeg","text","String","fromCharCode","parseInt","directiveParsers","for","if","elif","else","transition","postProp","prop","integrateAttr","aNode","realName","prefix","prefixIndex","colonIndex","modifier","parser","integrateProp","vars","xMatch","x","seg","getXPath","stack","currentTagName","path","parseTemplate","trimWhitespace","rootNode","tagMatch","tagReg","attrReg","currentNode","stackIndex","beforeLastIndex","tagEnd","pushTextNode","closeIndex","aElement","tagClose","nextCharCode","attrMatch","parentChildrenLen","parentChild","elses","tbodyNode","DEFAULT_FILTERS","url","_class","_style","_sep","sep","evalExpr","owner","dataCache","leftValue","rightValue","filterName","evalArgs","buf","set","dataCacheSource","dataCacheClearly","clear","changeExprCompareExprs","changeExpr","exprs","changeExprCompare","changePaths","changeLen","pathExpr","max","filterResult","lifeCycleOwnIs","LifeCycle","compiled","is","inited","painting","created","attached","leaving","detached","disposed","NodeType","IF","FOR","ELEM","CMPT","SLOT","TPL","getANodeProp","hotspot","HTML_ATTR_PROP_MAP","readonly","cellpadding","cellspacing","colspan","rowspan","valign","usemap","frameborder","defaultElementPropHandler","element","propName","output","bindInfo","svgPropHandler","boolPropHandler","defaultElementPropHandlers","class","className","slot","disabled","autofocus","required","draggable","analInputChecker","checkbox","radio","a","b","elementPropHandlers","input","multiple","checked","state","oper","bindValue","bindType","bindChecked","hintExpr","option","parentSelect","parent","selectValue","selected","select","getPropHandler","attrName","tagPropHandlers","propHandler","isDataChangeByElement","change","changeTarget","findMethod","nameExpr","method","Data","immutableSet","exprPaths","isNaN","eventDeclarationListener","eventBind","isComponentEvent","$event","checkDataTypes","setTypeChecker","listen","unlisten","fire","silent","silence","quiet","callee","exprRaw","force","merge","oldValue","returnValue","newArray","deleteCount","insertions","pop","shift","unshift","removeAt","hotTags","isBrowser","targetEl","parentEl","beforeEl","warnSetHTML","message","warn","getNodePath","node","nodePaths","nodeParent","anode","subTag","TextNode","reverseWalker","current","sel","goNext","attach","createComment","tempFlag","insertAdjacentHTML","dispose","_prev","textUpdateProp","textContent","changesIsInDataRef","changes","dataRef","overview","extOverview","wildOverview","DOMChildrenWalker","next","child","Element","lifeCycle","_elFns","parentComponent","elementInitTagName","_toPhase","reverseElementChildren","_attached","nodeDispose","_ondisposed","createReverseNode","parentIsComponent","childOwner","childScope","IfNode","ForNode","SlotNode","TemplateNode","ComponentType","getComponentType","elementDisposeChildren","noDetach","noTransition","elementUpdateChildren","_update","elementOwnToPhase","createNode","nodeOwnOnlyChildrenAttach","aNodeChildren","realANode","nameBind","isNamed","givenChildren","givenSlots","named","noname","isInserted","me","initData","varItem","isScoped","slotChildren","aNodeChild","cloneDirectives","excludes","nodeOwnSimpleDispose","nodeOwnCreateStump","ForItemData","forElement","directive","createForDirectiveChild","itemScope","itemANode","param","_create","rinseCondANode","cond","elseIndex","elseANode","handleProp","startRemoveEl","removeTarget","elementOwnAttach","detach","elementOwnDetach","elementOwnDispose","elementOwnCreate","_onEl","elementOwnOnEl","_doneLeave","leaveDispose","elementDispose","disposeNoDetach","disposeNoTransition","dynamicProps","htmlDirective","innerHTML","elementOwnAttached","isFromOuter","_notifyNeedReload","scopedChanges","relation","exprResolve","resolveItem","resolvedPaths","originalUpdate","oldChildrenLen","childrenChanges","pushToChildrenChanges","isChildrenRebuild","disposeChildren","parentFirstChild","parentLastChild","lastChild","isOnlyParentChild","newLen","cIndex","cLen","forLen","changeIndex","_splice","_set","changeStart","insertionsLen","newCount","indexChange","deleteLen","spliceArgs","newChildrenLen","lengthChange","_doCreateAndUpdate","doCreateAndUpdate","violentClear","disposedChildCount","disposeChild","childDisposed","replaceNode","cloneNode","replaceChild","nextChild","childANode","newChild","san4devtool","emptyPropWhenCreate","isComponent","sourceNode","elementAttach","_contentReady","elementGetTransition","givenANode","elementLeave","leave","warnEventListenMethod","valid","inputOnCompositionEnd","composing","inputOnCompositionStart","xPropOutputer","xProp","inputXPropOutputer","outputer","xProps","CompositionEvent","nativeEvents","native","_isInitFromEl","enter","removeEventListener","detachEvent","emitDevtool","arg","debug","__san_devtool__","Component","clazz","computed","messages","compileComponent","ComponentClass","recordHotspotData","notContentData","analyseANodeHotspot","analyseExprDataHotspot","idProp","valueProp","protoANode","givenNamedSlotBinds","binds","firstCommentNode","stumpMatch","stumpText","previousSibling","_createGivenSlots","dataTypes","dataTypeChecker","dataTypeName","computedDeps","_calcComputed","dataChanger","_dataChanger","defineComponent","proto","components","componentClass","_cmptReady","tpl","template","componentPropExtra","extra","analyseExprs","main","slotBind","givenSlotInited","slotName","_callHook","declaration","un","nameListeners","computedExpr","watch","dispatch","receiver","childrenTraversal","refTarget","needReloadForSlot","bindItem","setExpr","updateExpr","_repaintChildren","slotChildrenLen","slotChild","dataChanges","_updateBindxOwner","updateScopeExpr","dataExpr","san","myApp","_san2","_print2","body"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"p {\\n    color: red;\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./style.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","export default function printMe() {\n    console.log('Updating');\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","/**\n * San\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file 主文件\n * @author errorrik(errorrik@gmail.com)\n *         otakustay(otakustay@gmail.com)\n *         junmer(junmer@foxmail.com)\n */\n\n(function (root) {\n    // 人工调整打包代码顺序，通过注释手工写一些依赖\n//     // require('./util/guid');\n//     // require('./util/empty');\n//     // require('./util/extend');\n//     // require('./util/inherits');\n//     // require('./util/each');\n//     // require('./util/contains');\n//     // require('./util/bind');\n//     // require('./browser/on');\n//     // require('./browser/un');\n//     // require('./browser/svg-tags');\n//     // require('./browser/create-el');\n//     // require('./browser/remove-el');\n//     // require('./util/next-tick');\n//     // require('./browser/ie');\n//     // require('./browser/ie-old-than-9');\n//     // require('./browser/input-event-compatible');\n//     // require('./browser/auto-close-tags');\n//     // require('./util/data-types.js');\n//     // require('./util/create-data-types-checker.js');\n//     // require('./parser/walker');\n//     // require('./parser/create-a-node');\n//     // require('./parser/parse-template');\n//     // require('./runtime/change-expr-compare');\n//     // require('./runtime/data-change-type');\n//     // require('./runtime/default-filters');\n//     // require('./view/life-cycle');\n//     // require('./view/node-type');\n//     // require('./view/get-prop-handler');\n//     // require('./view/is-data-change-by-element');\n//     // require('./view/event-declaration-listener');\n//     // require('./view/create-node');\n\n\n    /**\n * @file 生成唯一id\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 唯一id的起始值\n *\n * @inner\n * @type {number}\n */\nvar guidIndex = 1;\n\n/**\n * 唯一id的前缀\n *\n * @inner\n * @type {string}\n */\nvar guidPrefix = (new Date()).getTime().toString(16).slice(8);\n\n/**\n * 获取唯一id\n *\n * @inner\n * @return {string} 唯一id\n */\nfunction guid() {\n    return '_' + guidPrefix + (guidIndex++);\n}\n\n// exports = module.exports = guid;\n\n\n/**\n * @file 空函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 啥都不干\n */\nfunction empty() {}\n\n// exports = module.exports = empty;\n\n\n/**\n * @file 属性拷贝\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 对象属性拷贝\n *\n * @param {Object} target 目标对象\n * @param {Object} source 源对象\n * @return {Object} 返回目标对象\n */\nfunction extend(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var value = source[key];\n            if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n}\n\n// exports = module.exports = extend;\n\n\n/**\n * @file 构建类之间的继承关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var extend = require('./extend');\n\n/**\n * 构建类之间的继承关系\n *\n * @param {Function} subClass 子类函数\n * @param {Function} superClass 父类函数\n */\nfunction inherits(subClass, superClass) {\n    /* jshint -W054 */\n    var subClassProto = subClass.prototype;\n    var F = new Function();\n    F.prototype = superClass.prototype;\n    subClass.prototype = new F();\n    subClass.prototype.constructor = subClass;\n    extend(subClass.prototype, subClassProto);\n    /* jshint +W054 */\n}\n\n// exports = module.exports = inherits;\n\n\n/**\n * @file 遍历数组\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 遍历数组集合\n *\n * @param {Array} array 数组源\n * @param {function(Any,number):boolean} iterator 遍历函数\n */\nfunction each(array, iterator) {\n    if (array && array.length > 0) {\n        for (var i = 0, l = array.length; i < l; i++) {\n            if (iterator(array[i], i) === false) {\n                break;\n            }\n        }\n    }\n}\n\n// exports = module.exports = each;\n\n\n/**\n * @file 判断数组中是否包含某项\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('./each');\n\n/**\n * 判断数组中是否包含某项\n *\n * @param {Array} array 数组\n * @param {*} value 包含的项\n * @return {boolean}\n */\nfunction contains(array, value) {\n    var result = false;\n    each(array, function (item) {\n        result = item === value;\n        return !result;\n    });\n\n    return result;\n}\n\n// exports = module.exports = contains;\n\n\n/**\n * @file bind函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * Function.prototype.bind 方法的兼容性封装\n *\n * @param {Function} func 要bind的函数\n * @param {Object} thisArg this指向对象\n * @param {...*} args 预设的初始参数\n * @return {Function}\n */\nfunction bind(func, thisArg) {\n    var nativeBind = Function.prototype.bind;\n    var slice = Array.prototype.slice;\n    // #[begin] allua\n    if (nativeBind && func.bind === nativeBind) {\n    // #[end]\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    // #[begin] allua\n    }\n\n    var args = slice.call(arguments, 2);\n    return function () {\n        return func.apply(thisArg, args.concat(slice.call(arguments)));\n    };\n    // #[end]\n}\n\n// exports = module.exports = bind;\n\n\n/**\n * @file DOM 事件挂载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction on(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.addEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.attachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = on;\n\n\n/**\n * @file DOM 事件卸载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件卸载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction un(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.removeEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.detachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = un;\n\n\n/**\n * @file 将字符串逗号切分返回对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n\n/**\n * 将字符串逗号切分返回对象\n *\n * @param {string} source 源字符串\n * @return {Object}\n */\nfunction splitStr2Obj(source) {\n    var result = {};\n    each(\n        source.split(','),\n        function (key) {\n            result[key] = 1;\n        }\n    );\n    return result;\n}\n\n// exports = module.exports = splitStr2Obj;\n\n\n/**\n * @file SVG标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * svgTags\n *\n * @see https://www.w3.org/TR/SVG/svgdtd.html 只取常用\n * @type {Object}\n */\nvar svgTags = splitStr2Obj(''\n    // structure\n    + 'svg,g,defs,desc,metadata,symbol,use,'\n    // image & shape\n    + 'image,path,rect,circle,line,ellipse,polyline,polygon,'\n    // text\n    + 'text,tspan,tref,textpath,'\n    // other\n    + 'marker,pattern,clippath,mask,filter,cursor,view,animate,'\n    // font\n    + 'font,font-face,glyph,missing-glyph');\n\n// exports = module.exports = svgTags;\n\n\n/**\n * @file DOM创建\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var svgTags = require('./svg-tags');\n\n/**\n * 创建 DOM 元素\n *\n * @param  {string} tagName tagName\n * @return {HTMLElement}\n */\nfunction createEl(tagName) {\n    if (svgTags[tagName]) {\n        return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n    }\n\n    return document.createElement(tagName);\n}\n\n// exports = module.exports = createEl;\n\n\n/**\n * @file 移除DOM\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 将 DOM 从页面中移除\n *\n * @param {HTMLElement} el DOM元素\n */\nfunction removeEl(el) {\n    if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n\n// exports = module.exports = removeEl;\n\n\n/**\n * @file 在下一个时间周期运行任务\n * @author errorrik(errorrik@gmail.com)\n */\n\n// 该方法参照了vue2.5.0的实现，感谢vue团队\n// SEE: https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/util/env.js#L68\n\n\n// var bind = require('./bind');\n\n/**\n * 下一个周期要执行的任务列表\n *\n * @inner\n * @type {Array}\n */\nvar nextTasks = [];\n\n/**\n * 执行下一个周期任务的函数\n *\n * @inner\n * @type {Function}\n */\nvar nextHandler;\n\n/**\n * 浏览器是否支持原生Promise\n * 对Promise做判断，是为了禁用一些不严谨的Promise的polyfill\n *\n * @inner\n * @type {boolean}\n */\nvar isNativePromise = typeof Promise === 'function' && /native code/.test(Promise);\n\n/**\n * 在下一个时间周期运行任务\n *\n * @inner\n * @param {Function} fn 要运行的任务函数\n * @param {Object=} thisArg this指向对象\n */\nfunction nextTick(fn, thisArg) {\n    if (thisArg) {\n        fn = bind(fn, thisArg);\n    }\n    nextTasks.push(fn);\n\n    if (nextHandler) {\n        return;\n    }\n\n    nextHandler = function () {\n        var tasks = nextTasks.slice(0);\n        nextTasks = [];\n        nextHandler = null;\n\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            tasks[i]();\n        }\n    };\n\n    // 非标准方法，但是此方法非常吻合要求。\n    if (typeof setImmediate === 'function') {\n        setImmediate(nextHandler);\n    }\n    // 用MessageChannel去做setImmediate的polyfill\n    // 原理是将新的message事件加入到原有的dom events之后\n    else if (typeof MessageChannel === 'function') {\n        var channel = new MessageChannel();\n        var port = channel.port2;\n        channel.port1.onmessage = nextHandler;\n        port.postMessage(1);\n    }\n    // for native app\n    else if (isNativePromise) {\n        Promise.resolve().then(nextHandler);\n    }\n    else {\n        setTimeout(nextHandler, 0);\n    }\n}\n\n// exports = module.exports = nextTick;\n\n\n/**\n * @file ie版本号\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 从userAgent中ie版本号的匹配信息\n *\n * @type {Array}\n */\nvar ieVersionMatch = typeof navigator !== 'undefined'\n    && navigator.userAgent.match(/msie\\s*([0-9]+)/i);\n\n/**\n * ie版本号，非ie时为0\n *\n * @type {number}\n */\nvar ie = ieVersionMatch ? ieVersionMatch[1] - 0 : 0;\n\n// exports = module.exports = ie;\n\n\n/**\n * @file 是否 IE 并且小于 9\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ie = require('./ie');\n\n// HACK:\n// 1. IE8下，设置innerHTML时如果以html comment开头，comment会被自动滤掉\n//    为了保证stump存在，需要设置完html后，createComment并appendChild/insertBefore\n// 2. IE8下，innerHTML还不支持custom element，所以需要用div替代，不用createElement\n// 3. 虽然IE8已经优化了字符串+连接，碎片化连接性能不再退化\n//    但是由于上面多个兼容场景都用 < 9 判断，所以字符串连接也沿用\n//    所以结果是IE8下字符串连接用的是数组join的方式\n\n// #[begin] allua\n/**\n * 是否 IE 并且小于 9\n */\nvar ieOldThan9 = ie && ie < 9;\n// #[end]\n\n// exports = module.exports = ieOldThan9;\n\n\n/**\n * @file DOM 事件挂载\n * @author dafrok(o.o@mug.dog)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n */\nfunction trigger(el, eventName) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, true, true);\n    el.dispatchEvent(event);\n}\n\n// exports = module.exports = trigger;\n\n\n/**\n * @file 解决 IE9 在表单元素中删除字符时不触发事件的问题\n * @author dafrok(o.o@mug.dog)\n */\n\n// var ie = require('./ie');\n// var on = require('./on');\n// var trigger = require('./trigger');\n\n// #[begin] allua\nif (ie === 9) {\n    on(document, 'selectionchange', function () {\n        var el = document.activeElement;\n        if (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') {\n            trigger(el, 'input');\n        }\n    });\n}\n// #[end]\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar autoCloseTags = splitStr2Obj('area,base,br,col,embed,hr,img,input,keygen,param,source,track,wbr');\n\n// exports = module.exports = autoCloseTags;\n\n\n/**\n * @file data types\n * @author leon <ludafa@outlook.com>\n */\n\n// var bind = require('./bind');\n// var empty = require('./empty');\n// var extend = require('./extend');\n\n// #[begin] error\nvar ANONYMOUS_CLASS_NAME = '<<anonymous>>';\n\n/**\n * 获取精确的类型\n *\n * @NOTE 如果 obj 是一个 DOMElement，我们会返回 `element`；\n *\n * @param  {*} obj 目标\n * @return {string}\n */\nfunction getDataType(obj) {\n\n    if (obj && obj.nodeType === 1) {\n        return 'element';\n    }\n\n    return Object.prototype.toString\n        .call(obj)\n        .slice(8, -1)\n        .toLowerCase();\n}\n// #[end]\n\n/**\n * 创建链式的数据类型校验器\n *\n * @param  {Function} validate 真正的校验器\n * @return {Function}\n */\nfunction createChainableChecker(validate) {\n    var chainedChecker = function () {};\n    chainedChecker.isRequired = empty;\n\n    // 只在 error 功能启用时才有实际上的 dataTypes 检测\n    // #[begin] error\n    var checkType = function (isRequired, data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        componentName = componentName || ANONYMOUS_CLASS_NAME;\n\n        // 如果是 null 或 undefined，那么要提前返回啦\n        if (dataValue == null) {\n            // 是 required 就报错\n            if (isRequired) {\n                throw new Error('[SAN ERROR] '\n                    + 'The `' + dataName + '` '\n                    + 'is marked as required in `' + componentName + '`, '\n                    + 'but its value is ' + dataType\n                );\n            }\n            // 不是 required，那就是 ok 的\n            return;\n        }\n\n        validate(data, dataName, componentName, fullDataName);\n\n    };\n\n    chainedChecker = bind(checkType, null, false);\n    chainedChecker.isRequired = bind(checkType, null, true);\n    // #[end]\n\n\n\n    return chainedChecker;\n\n}\n\n// #[begin] error\n/**\n * 生成主要类型数据校验器\n *\n * @param  {string} type 主类型\n * @return {Function}\n */\nfunction createPrimaryTypeChecker(type) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== type) {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected ' + type + ')'\n            );\n        }\n\n    });\n\n}\n\n\n\n/**\n * 生成 arrayOf 校验器\n *\n * @param  {Function} arrayItemChecker 数组中每项数据的校验器\n * @return {Function}\n */\nfunction createArrayOfChecker(arrayItemChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof arrayItemChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `arrayOf`, expected `function`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected array)'\n            );\n        }\n\n        for (var i = 0, len = dataValue.length; i < len; i++) {\n            arrayItemChecker(dataValue, i, componentName, fullDataName + '[' + i + ']');\n        }\n\n    });\n\n}\n\n/**\n * 生成 instanceOf 检测器\n *\n * @param  {Function|Class} expectedClass 期待的类\n * @return {Function}\n */\nfunction createInstanceOfChecker(expectedClass) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n\n        if (dataValue instanceof expectedClass) {\n            return;\n        }\n\n        var dataValueClassName = dataValue.constructor && dataValue.constructor.name\n            ? dataValue.constructor.name\n            : ANONYMOUS_CLASS_NAME;\n\n        var expectedClassName = expectedClass.name || ANONYMOUS_CLASS_NAME;\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n            + '(' + dataValueClassName + ' supplied to ' + componentName + ', '\n            + 'expected instance of ' + expectedClassName + ')'\n        );\n\n\n    });\n\n}\n\n/**\n * 生成 shape 校验器\n *\n * @param  {Object} shapeTypes shape 校验规则\n * @return {Function}\n */\nfunction createShapeChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `shape`, expected `object`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var shapeKeyName in shapeTypes) {\n            if (shapeTypes.hasOwnProperty(shapeKeyName)) {\n                var checker = shapeTypes[shapeKeyName];\n                if (typeof checker === 'function') {\n                    checker(dataValue, shapeKeyName, componentName, fullDataName + '.' + shapeKeyName);\n                }\n            }\n        }\n\n    });\n\n}\n\n/**\n * 生成 oneOf 校验器\n *\n * @param  {Array} expectedEnumValues 期待的枚举值\n * @return {Function}\n */\nfunction createOneOfChecker(expectedEnumValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumValues.length; i < len; i++) {\n            if (dataValue === expectedEnumValues[i]) {\n                return;\n            }\n        }\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ', '\n            + 'expected one of ' + expectedEnumValues.join(',') + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 oneOfType 校验器\n *\n * @param  {Array<Function>} expectedEnumOfTypeValues 期待的枚举类型\n * @return {Function}\n */\nfunction createOneOfTypeChecker(expectedEnumOfTypeValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumOfTypeValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumOfTypeValues.length; i < len; i++) {\n\n            var checker = expectedEnumOfTypeValues[i];\n\n            if (typeof checker !== 'function') {\n                continue;\n            }\n\n            try {\n                checker(data, dataName, componentName, fullDataName);\n                // 如果 checker 完成校验没报错，那就返回了\n                return;\n            }\n            catch (e) {\n                // 如果有错误，那么应该把错误吞掉\n            }\n\n        }\n\n        // 所有的可接受 type 都失败了，才丢一个异常\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + dataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 objectOf 校验器\n *\n * @param  {Function} typeChecker 对象属性值校验器\n * @return {Function}\n */\nfunction createObjectOfChecker(typeChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof typeChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `objectOf`, expected function'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + dataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var dataKeyName in dataValue) {\n            if (dataValue.hasOwnProperty(dataKeyName)) {\n                typeChecker(\n                    dataValue,\n                    dataKeyName,\n                    componentName,\n                    fullDataName + '.' + dataKeyName\n                );\n            }\n        }\n\n\n    });\n\n}\n\n/**\n * 生成 exact 校验器\n *\n * @param  {Object} shapeTypes object 形态定义\n * @return {Function}\n */\nfunction createExactChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName, secret) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `exact`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataValueType = getDataType(dataValue);\n\n        if (dataValueType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid data `' + fullDataName + '` of type `' + dataValueType + '`'\n                + '(supplied to ' + componentName + ', expected `object`)'\n            );\n        }\n\n        var allKeys = {};\n\n        // 先合入 shapeTypes\n        extend(allKeys, shapeTypes);\n        // 再合入 dataValue\n        extend(allKeys, dataValue);\n        // 保证 allKeys 的类型正确\n\n        for (var key in allKeys) {\n            if (allKeys.hasOwnProperty(key)) {\n                var checker = shapeTypes[key];\n\n                // dataValue 中有一个多余的数据项\n                if (!checker) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is not defined in `DataTypes.exact`)'\n                    );\n                }\n\n                if (!(key in dataValue)) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is marked `required` in `DataTypes.exact`)'\n                    );\n                }\n\n                checker(\n                    dataValue,\n                    key,\n                    componentName,\n                    fullDataName + '.' + key,\n                    secret\n                );\n\n            }\n        }\n\n    });\n\n}\n// #[end]\n\n\n\n/* eslint-disable fecs-valid-var-jsdoc */\nvar DataTypes = {\n    array: createChainableChecker(empty),\n    object: createChainableChecker(empty),\n    func: createChainableChecker(empty),\n    string: createChainableChecker(empty),\n    number: createChainableChecker(empty),\n    bool: createChainableChecker(empty),\n    symbol: createChainableChecker(empty),\n    any: createChainableChecker,\n    arrayOf: createChainableChecker,\n    instanceOf: createChainableChecker,\n    shape: createChainableChecker,\n    oneOf: createChainableChecker,\n    oneOfType: createChainableChecker,\n    objectOf: createChainableChecker,\n    exact: createChainableChecker\n};\n\n// #[begin] error\nDataTypes = {\n\n    any: createChainableChecker(empty),\n\n    // 类型检测\n    array: createPrimaryTypeChecker('array'),\n    object: createPrimaryTypeChecker('object'),\n    func: createPrimaryTypeChecker('function'),\n    string: createPrimaryTypeChecker('string'),\n    number: createPrimaryTypeChecker('number'),\n    bool: createPrimaryTypeChecker('boolean'),\n    symbol: createPrimaryTypeChecker('symbol'),\n\n    // 复合类型检测\n    arrayOf: createArrayOfChecker,\n    instanceOf: createInstanceOfChecker,\n    shape: createShapeChecker,\n    oneOf: createOneOfChecker,\n    oneOfType: createOneOfTypeChecker,\n    objectOf: createObjectOfChecker,\n    exact: createExactChecker\n\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n// #[end]\n\n\n// module.exports = DataTypes;\n\n\n/**\n * @file 创建数据检测函数\n * @author leon<ludafa@outlook.com>\n */\n\n\n// #[begin] error\n\n/**\n * 创建数据检测函数\n *\n * @param  {Object} dataTypes     数据格式\n * @param  {string} componentName 组件名\n * @return {Function}\n */\nfunction createDataTypesChecker(dataTypes, componentName) {\n\n    /**\n     * 校验 data 是否满足 data types 的格式\n     *\n     * @param  {*} data 数据\n     */\n    return function (data) {\n\n        for (var dataTypeName in dataTypes) {\n\n            if (dataTypes.hasOwnProperty(dataTypeName)) {\n\n                var dataTypeChecker = dataTypes[dataTypeName];\n\n                if (typeof dataTypeChecker !== 'function') {\n                    throw new Error('[SAN ERROR] '\n                        + componentName + ':' + dataTypeName + ' is invalid; '\n                        + 'it must be a function, usually from san.DataTypes'\n                    );\n                }\n\n                dataTypeChecker(\n                    data,\n                    dataTypeName,\n                    componentName,\n                    dataTypeName\n                );\n\n\n            }\n        }\n\n    };\n\n}\n\n// #[end]\n\n// module.exports = createDataTypesChecker;\n\n\n/**\n * @file 字符串源码读取类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 字符串源码读取类，用于模板字符串解析过程\n *\n * @class\n * @param {string} source 要读取的字符串\n */\nfunction Walker(source) {\n    this.source = source;\n    this.len = this.source.length;\n    this.index = 0;\n}\n\n/**\n * 获取当前字符码\n *\n * @return {number}\n */\nWalker.prototype.currentCode = function () {\n    return this.charCode(this.index);\n};\n\n/**\n * 截取字符串片段\n *\n * @param {number} start 起始位置\n * @param {number} end 结束位置\n * @return {string}\n */\nWalker.prototype.cut = function (start, end) {\n    return this.source.slice(start, end);\n};\n\n/**\n * 向前读取字符\n *\n * @param {number} distance 读取字符数\n */\nWalker.prototype.go = function (distance) {\n    this.index += distance;\n};\n\n/**\n * 读取下一个字符，返回下一个字符的 code\n *\n * @return {number}\n */\nWalker.prototype.nextCode = function () {\n    this.go(1);\n    return this.currentCode();\n};\n\n/**\n * 获取相应位置字符的 code\n *\n * @param {number} index 字符位置\n * @return {number}\n */\nWalker.prototype.charCode = function (index) {\n    return this.source.charCodeAt(index);\n};\n\n/**\n * 向前读取字符，直到遇到指定字符再停止\n *\n * @param {number=} charCode 指定字符的code\n * @return {boolean} 当指定字符时，返回是否碰到指定的字符\n */\nWalker.prototype.goUntil = function (charCode) {\n    var code;\n    while (this.index < this.len && (code = this.currentCode())) {\n        switch (code) {\n            case 32:\n            case 9:\n                this.index++;\n                break;\n            default:\n                if (code === charCode) {\n                    this.index++;\n                    return 1;\n                }\n                return;\n        }\n    }\n};\n\n/**\n * 向前读取符合规则的字符片段，并返回规则匹配结果\n *\n * @param {RegExp} reg 字符片段的正则表达式\n * @return {Array}\n */\nWalker.prototype.match = function (reg) {\n    reg.lastIndex = this.index;\n\n    var match = reg.exec(this.source);\n    if (match) {\n        this.index = reg.lastIndex;\n    }\n\n    return match;\n};\n\n// exports = module.exports = Walker;\n\n\n\n/**\n * @file 模板解析生成的抽象节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 创建模板解析生成的抽象节点\n *\n * @param {Object=} options 节点参数\n * @param {string=} options.tagName 标签名\n * @param {ANode=} options.parent 父节点\n * @param {boolean=} options.textExpr 文本节点表达式对象\n * @return {Object}\n */\nfunction createANode(options) {\n    options = options || {};\n\n    if (!options.textExpr) {\n        options.directives = options.directives || {};\n        options.props = options.props || [];\n        options.events = options.events || [];\n        options.children = options.children || [];\n    }\n\n    return options;\n}\n\n// exports = module.exports = createANode;\n\n\n/**\n * @file 把 kebab case 字符串转换成 camel case\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 把 kebab case 字符串转换成 camel case\n *\n * @param {string} source 源字符串\n * @return {string}\n */\nfunction kebab2camel(source) {\n    return source.replace(/-([a-z])/g, function (match, alpha) {\n        return alpha.toUpperCase();\n    });\n}\n\n// exports = module.exports = kebab2camel;\n\n\n/**\n * @file 表达式类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 表达式类型\n *\n * @const\n * @type {Object}\n */\nvar ExprType = {\n    STRING: 1,\n    NUMBER: 2,\n    BOOL: 3,\n    ACCESSOR: 4,\n    INTERP: 5,\n    CALL: 6,\n    TEXT: 7,\n    BINARY: 8,\n    UNARY: 9,\n    TERTIARY: 10\n};\n\n// exports = module.exports = ExprType;\n\n\n/**\n * @file 创建访问表达式对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n\n/**\n * 创建访问表达式对象\n *\n * @param {Array} paths 访问路径\n * @return {Object}\n */\nfunction createAccessor(paths) {\n    return {\n        type: ExprType.ACCESSOR,\n        paths: paths\n    };\n}\n\n// exports = module.exports = createAccessor;\n\n\n/**\n * @file 读取字符串\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取字符串\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readString(walker) {\n    var startCode = walker.currentCode();\n    var startIndex = walker.index;\n    var charCode;\n\n    walkLoop: while ((charCode = walker.nextCode())) {\n        switch (charCode) {\n            case 92: // \\\n                walker.go(1);\n                break;\n            case startCode:\n                walker.go(1);\n                break walkLoop;\n        }\n    }\n\n    var literal = walker.cut(startIndex, walker.index);\n    return {\n        type: ExprType.STRING,\n        value: (new Function('return ' + literal))()\n    };\n}\n\n// exports = module.exports = readString;\n\n\n/**\n * @file 读取数字\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取数字\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readNumber(walker) {\n    var match = walker.match(/\\s*(-?[0-9]+(\\.[0-9]+)?)/g);\n\n    return {\n        type: ExprType.NUMBER,\n        value: match[1] - 0\n    };\n}\n\n// exports = module.exports = readNumber;\n\n\n/**\n * @file 读取ident\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 读取ident\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {string}\n */\nfunction readIdent(walker) {\n    var match = walker.match(/\\s*([\\$0-9a-z_]+)/ig);\n    return match[1];\n}\n\n// exports = module.exports = readIdent;\n\n\n/**\n * @file 读取三元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalORExpr = require('./read-logical-or-expr');\n\n/**\n * 读取三元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readTertiaryExpr(walker) {\n    var conditional = readLogicalORExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 63) { // ?\n        walker.go(1);\n        var yesExpr = readTertiaryExpr(walker);\n        walker.goUntil();\n\n        if (walker.currentCode() === 58) { // :\n            walker.go(1);\n            return {\n                type: ExprType.TERTIARY,\n                segs: [\n                    conditional,\n                    yesExpr,\n                    readTertiaryExpr(walker)\n                ]\n            };\n        }\n    }\n\n    return conditional;\n}\n\n// exports = module.exports = readTertiaryExpr;\n\n\n/**\n * @file 读取访问表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var readIdent = require('./read-ident');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取访问表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAccessor(walker) {\n    var firstSeg = readIdent(walker);\n    switch (firstSeg) {\n        case 'true':\n        case 'false':\n            return {\n                type: ExprType.BOOL,\n                value: firstSeg === 'true'\n            };\n    }\n\n    var result = createAccessor([\n        {\n            type: ExprType.STRING,\n            value: firstSeg\n        }\n    ]);\n\n    /* eslint-disable no-constant-condition */\n    accessorLoop: while (1) {\n    /* eslint-enable no-constant-condition */\n\n        switch (walker.currentCode()) {\n            case 46: // .\n                walker.go(1);\n\n                // ident as string\n                result.paths.push({\n                    type: ExprType.STRING,\n                    value: readIdent(walker)\n                });\n                break;\n\n            case 91: // [\n                walker.go(1);\n                result.paths.push(readTertiaryExpr(walker));\n                walker.goUntil(93); // ]\n                break;\n\n            default:\n                break accessorLoop;\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = readAccessor;\n\n\n/**\n * @file 读取括号表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取括号表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readParenthesizedExpr(walker) {\n    walker.go(1);\n    var expr = readTertiaryExpr(walker);\n    walker.goUntil(41); // )\n\n    return expr;\n}\n\n// exports = module.exports = readParenthesizedExpr;\n\n\n/**\n * @file 读取一元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readString = require('./read-string');\n// var readNumber = require('./read-number');\n// var readAccessor = require('./read-accessor');\n// var readParenthesizedExpr = require('./read-parenthesized-expr');\n\n\n/**\n * 读取一元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readUnaryExpr(walker) {\n    walker.goUntil();\n\n    switch (walker.currentCode()) {\n        case 33: // !\n            walker.go(1);\n            return {\n                type: ExprType.UNARY,\n                expr: readUnaryExpr(walker)\n            };\n        case 34: // \"\n        case 39: // '\n            return readString(walker);\n        case 45: // number\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            return readNumber(walker);\n        case 40: // (\n            return readParenthesizedExpr(walker);\n    }\n\n    return readAccessor(walker);\n}\n\n// exports = module.exports = readUnaryExpr;\n\n\n/**\n * @file 读取乘法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 读取乘法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readMultiplicativeExpr(walker) {\n    var expr = readUnaryExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n\n        var code = walker.currentCode();\n        switch (code) {\n            case 37: // %\n            case 42: // *\n            case 47: // /\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readUnaryExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n\n    return expr;\n}\n\n// exports = module.exports = readMultiplicativeExpr;\n\n\n/**\n * @file 读取加法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readMultiplicativeExpr = require('./read-multiplicative-expr');\n\n\n/**\n * 读取加法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAdditiveExpr(walker) {\n    var expr = readMultiplicativeExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n        var code = walker.currentCode();\n\n        switch (code) {\n            case 43: // +\n            case 45: // -\n                walker.go(1);\n                expr = {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readMultiplicativeExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readAdditiveExpr;\n\n\n/**\n * @file 读取关系判断表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAdditiveExpr = require('./read-additive-expr');\n\n/**\n * 读取关系判断表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readRelationalExpr(walker) {\n    var expr = readAdditiveExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 60: // <\n        case 62: // >\n            if (walker.nextCode() === 61) {\n                code += 61;\n                walker.go(1);\n            }\n\n            return {\n                type: ExprType.BINARY,\n                operator: code,\n                segs: [expr, readAdditiveExpr(walker)]\n            };\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readRelationalExpr;\n\n\n/**\n * @file 读取相等比对表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readRelationalExpr = require('./read-relational-expr');\n\n/**\n * 读取相等比对表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readEqualityExpr(walker) {\n    var expr = readRelationalExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 61: // =\n        case 33: // !\n            if (walker.nextCode() === 61) {\n                code += 61;\n                if (walker.nextCode() === 61) {\n                    code += 61;\n                    walker.go(1);\n                }\n\n                return {\n                    type: ExprType.BINARY,\n                    operator: code,\n                    segs: [expr, readRelationalExpr(walker)]\n                };\n            }\n\n            walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readEqualityExpr;\n\n\n/**\n * @file 读取逻辑与表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readEqualityExpr = require('./read-equality-expr');\n\n/**\n * 读取逻辑与表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalANDExpr(walker) {\n    var expr = readEqualityExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 38) { // &\n        if (walker.nextCode() === 38) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 76,\n                segs: [expr, readLogicalANDExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalANDExpr;\n\n\n/**\n * @file 读取逻辑或表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalANDExpr = require('./read-logical-and-expr');\n\n/**\n * 读取逻辑或表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalORExpr(walker) {\n    var expr = readLogicalANDExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 124) { // |\n        if (walker.nextCode() === 124) {\n            walker.go(1);\n            return {\n                type: ExprType.BINARY,\n                operator: 248,\n                segs: [expr, readLogicalORExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalORExpr;\n\n\n/**\n * @file 解析表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 解析表达式\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseExpr(source) {\n    if (typeof source === 'object' && source.type) {\n        return source;\n    }\n\n    var expr = readTertiaryExpr(new Walker(source));\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseExpr;\n\n\n/**\n * @file 读取调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAccessor = require('./read-accessor');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取调用\n *\n * @param {Walker} walker 源码读取对象\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction readCall(walker, defaultArgs) {\n    walker.goUntil();\n    var ident = readAccessor(walker);\n    var args = [];\n\n    if (walker.goUntil(40)) { // (\n        while (!walker.goUntil(41)) { // )\n            args.push(readTertiaryExpr(walker));\n            walker.goUntil(44); // ,\n        }\n    }\n    else if (defaultArgs) {\n        args = defaultArgs;\n    }\n\n    return {\n        type: ExprType.CALL,\n        name: ident,\n        args: args\n    };\n}\n\n// exports = module.exports = readCall;\n\n\n/**\n * @file 解析调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var readCall = require('./read-call');\n\n/**\n * 解析调用\n *\n * @param {string} source 源码\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction parseCall(source, defaultArgs) {\n    var expr = readCall(new Walker(source), defaultArgs);\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseCall;\n\n\n/**\n * @file 解析插值替换\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n\n/**\n * 解析插值替换\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseInterp(source) {\n    var walker = new Walker(source);\n\n    var interp = {\n        type: ExprType.INTERP,\n        expr: readTertiaryExpr(walker),\n        filters: [],\n        raw: source\n    };\n\n    while (walker.goUntil(124)) { // |\n        var callExpr = readCall(walker);\n        switch (callExpr.name.paths[0].value) {\n            case 'html':\n                break;\n            case 'raw':\n                interp.original = 1;\n                break;\n            default:\n                interp.filters.push(callExpr);\n        }\n    }\n\n    return interp;\n}\n\n// exports = module.exports = parseInterp;\n\n\n/**\n * @file 解码 HTML 字符实体\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar ENTITY_DECODE_MAP = {\n    lt: '<',\n    gt: '>',\n    nbsp: ' ',\n    quot: '\\\"',\n    emsp: '\\u2003',\n    ensp: '\\u2002',\n    thinsp: '\\u2009',\n    copy: '\\xa9',\n    reg: '\\xae',\n    zwnj: '\\u200c',\n    zwj: '\\u200d',\n    amp: '&'\n};\n\n/**\n * 解码 HTML 字符实体\n *\n * @param {string} source 要解码的字符串\n * @return {string}\n */\nfunction decodeHTMLEntity(source) {\n    return source\n        .replace(/&#([0-9]+);/g, function (match, code) {\n            return String.fromCharCode(+code);\n        })\n        .replace(/&#x([0-9a-f]+);/ig, function (match, code) {\n            return String.fromCharCode(parseInt(code, 16));\n        })\n        .replace(/&([a-z]+);/ig, function (match, code) {\n            return ENTITY_DECODE_MAP[code] || match;\n        });\n}\n\n// exports = module.exports = decodeHTMLEntity;\n\n\n/**\n * @file 解析文本\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var parseInterp = require('./parse-interp');\n// var decodeHTMLEntity = require('../util/decode-html-entity');\n\n/**\n * 对字符串进行可用于new RegExp的字面化\n *\n * @inner\n * @param {string} source 需要字面化的字符串\n * @return {string} 字符串字面化结果\n */\nfunction regexpLiteral(source) {\n    return source.replace(/[\\^\\[\\]\\$\\(\\)\\{\\}\\?\\*\\.\\+\\\\]/g, function (c) {\n        return '\\\\' + c;\n    });\n}\n\n/**\n * 解析文本\n *\n * @param {string} source 源码\n * @param {Array?} delimiters 分隔符。默认为 ['{{', '}}']\n * @return {Object}\n */\nfunction parseText(source, delimiters) {\n    delimiters = delimiters || ['{{', '}}'];\n    var exprStartReg = new RegExp(\n        regexpLiteral(delimiters[0]) + '\\\\s*([\\\\s\\\\S]+?)\\\\s*' + regexpLiteral(delimiters[1]),\n        'ig'\n    );\n\n    var exprMatch;\n\n    var walker = new Walker(source);\n    var beforeIndex = 0;\n\n    var expr = {\n        type: ExprType.TEXT,\n        segs: []\n    };\n\n    function pushStringToSeg(text) {\n        text && expr.segs.push({\n            type: ExprType.STRING,\n            literal: text,\n            value: decodeHTMLEntity(text)\n        });\n    }\n\n    while ((exprMatch = walker.match(exprStartReg)) != null) {\n        pushStringToSeg(walker.cut(\n            beforeIndex,\n            walker.index - exprMatch[0].length\n        ));\n\n        var interp = parseInterp(exprMatch[1]);\n        expr.original = expr.original || interp.original;\n\n        expr.segs.push(interp);\n        beforeIndex = walker.index;\n    }\n\n    pushStringToSeg(walker.cut(beforeIndex));\n\n\n\n    if (expr.segs.length === 1 && expr.segs[0].type === ExprType.STRING) {\n        expr.value = expr.segs[0].value;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = parseText;\n\n\n/**\n * @file 解析指令\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var readAccessor = require('./read-accessor');\n\n/**\n * 指令解析器\n *\n * @inner\n * @type {Object}\n */\nvar directiveParsers = {\n    'for': function (value) {\n        var walker = new Walker(value);\n        var match = walker.match(/^\\s*([\\$0-9a-z_]+)(\\s*,\\s*([\\$0-9a-z_]+))?\\s+in\\s+/ig);\n\n        if (match) {\n            return {\n                item: parseExpr(match[1]),\n                index: parseExpr(match[3] || '$index'),\n                value: readAccessor(walker)\n            };\n        }\n\n        // #[begin] error\n        throw new Error('[SAN FATAL] for syntax error: ' + value);\n        // #[end]\n    },\n\n    'ref': function (value, options) {\n        return {\n            value: parseText(value, options.delimiters)\n        };\n    },\n\n    'if': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'elif': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'else': function (value) {\n        return {\n            value: {}\n        };\n    },\n\n    'html': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'transition': function (value) {\n        return {\n            value: parseCall(value)\n        };\n    }\n};\n\n/**\n * 解析指令\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 指令名称\n * @param {string} value 指令值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction parseDirective(aNode, name, value, options) {\n    if (name === 'else-if') {\n        name = 'elif';\n    }\n\n    var parser = directiveParsers[name];\n    if (parser) {\n        (aNode.directives[name] = parser(value, options)).raw = value;\n    }\n}\n\n// exports = module.exports = parseDirective;\n\n\n/**\n * @file 对属性信息进行处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n\n/**\n * 对属性信息进行处理\n * 对组件的 binds 或者特殊的属性（比如 input 的 checked）需要处理\n *\n * 扁平化：\n * 当 text 解析只有一项时，要么就是 string，要么就是 interp\n * interp 有可能是绑定到组件属性的表达式，不希望被 eval text 成 string\n * 所以这里做个处理，只有一项时直接抽出来\n *\n * bool属性：\n * 当绑定项没有值时，默认为true\n *\n * @param {Object} prop 属性对象\n */\nfunction postProp(prop) {\n    var expr = prop.expr;\n\n    if (expr.type === ExprType.TEXT) {\n        switch (expr.segs.length) {\n            case 0:\n                prop.expr = {\n                    type: ExprType.BOOL,\n                    value: true\n                };\n                break;\n\n            case 1:\n                expr = prop.expr = expr.segs[0];\n                if (expr.type === ExprType.INTERP && expr.filters.length === 0) {\n                    prop.expr = expr.expr;\n                }\n        }\n    }\n}\n\n// exports = module.exports = postProp;\n\n\n/**\n * @file 解析抽象节点属性\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var kebab2camel = require('../util/kebab2camel');\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var parseDirective = require('./parse-directive');\n// var postProp = require('./post-prop');\n\n\n/**\n * 解析抽象节点属性\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateAttr(aNode, name, value, options) {\n    var prefixIndex = name.indexOf('-');\n    var realName;\n    var prefix;\n\n    if (prefixIndex > 0) {\n        prefix = name.slice(0, prefixIndex);\n        realName = name.slice(prefixIndex + 1);\n    }\n\n    switch (prefix) {\n        case 'on':\n            var event = {\n                name: realName,\n                modifier: {}\n            };\n            aNode.events.push(event);\n\n            var colonIndex;\n            while ((colonIndex = value.indexOf(':')) > 0) {\n                var modifier = value.slice(0, colonIndex);\n\n                // eventHandler(\"dd:aa\") 这种情况不能算modifier，需要辨识\n                if (!/^[a-z]+$/i.test(modifier)) {\n                    break;\n                }\n\n                event.modifier[modifier] = true;\n                value = value.slice(colonIndex + 1);\n            }\n\n            event.expr = parseCall(value, [\n                createAccessor([\n                    { type: ExprType.STRING, value: '$event' }\n                ])\n            ]);\n            break;\n\n        case 'san':\n        case 's':\n            parseDirective(aNode, realName, value, options);\n            break;\n\n        case 'prop':\n            integrateProp(aNode, realName, value, options);\n            break;\n\n        case 'var':\n            if (!aNode.vars) {\n                aNode.vars = [];\n            }\n\n            realName = kebab2camel(realName);\n            aNode.vars.push({\n                name: realName,\n                expr: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n            });\n            break;\n\n        default:\n            integrateProp(aNode, name, value, options);\n    }\n}\n\n/**\n * 解析抽象节点绑定属性\n *\n * @inner\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateProp(aNode, name, value, options) {\n    // parse two way binding, e.g. value=\"{=ident=}\"\n    var xMatch = value.match(/^\\{=\\s*(.*?)\\s*=\\}$/);\n\n    if (xMatch) {\n        aNode.props.push({\n            name: name,\n            expr: parseExpr(xMatch[1]),\n            x: 1,\n            raw: value\n        });\n\n        return;\n    }\n\n    // parse normal prop\n    var prop = {\n        name: name,\n        expr: parseText(value, options.delimiters),\n        raw: value\n    };\n\n    // 这里不能把只有一个插值的属性抽取\n    // 因为插值里的值可能是html片段，容易被注入\n    // 组件的数据绑定在组件init时做抽取\n    switch (name) {\n        case 'class':\n        case 'style':\n            each(prop.expr.segs, function (seg) {\n                if (seg.type === ExprType.INTERP) {\n                    seg.filters.push({\n                        type: ExprType.CALL,\n                        name: createAccessor([\n                            {\n                                type: ExprType.STRING,\n                                value: '_' + prop.name\n                            }\n                        ]),\n                        args: []\n                    });\n                }\n            });\n            break;\n\n        case 'checked':\n            if (aNode.tagName === 'input') {\n                postProp(prop);\n            }\n            break;\n    }\n\n    aNode.props.push(prop);\n}\n\n\n// exports = module.exports = integrateAttr;\n\n\n/**\n * @file 解析模板\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('./create-a-node');\n// var Walker = require('./walker');\n// var integrateAttr = require('./integrate-attr');\n// var parseText = require('./parse-text');\n// var autoCloseTags = require('../browser/auto-close-tags');\n\n// #[begin] error\nfunction getXPath(stack, currentTagName) {\n    var path = ['ROOT'];\n    for (var i = 1, len = stack.length; i < len; i++) {\n        path.push(stack[i].tagName);\n    }\n    if (currentTagName) {\n        path.push(currentTagName);\n    }\n    return path.join('>');\n}\n// #[end]\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 解析 template\n *\n * @param {string} source template源码\n * @param {Object?} options 解析参数\n * @param {string?} options.trimWhitespace 空白文本的处理策略。none|blank|all\n * @param {Array?} options.delimiters 插值分隔符列表\n * @return {ANode}\n */\nfunction parseTemplate(source, options) {\n    options = options || {};\n    options.trimWhitespace = options.trimWhitespace || 'none';\n\n    var rootNode = createANode();\n\n    if (typeof source !== 'string') {\n        return rootNode;\n    }\n\n    source = source.replace(/<!--([\\s\\S]*?)-->/mg, '').replace(/(^\\s+|\\s+$)/g, '');\n    var walker = new Walker(source);\n\n    var tagReg = /<(\\/)?([a-z0-9-]+)\\s*/ig;\n    var attrReg = /([-:0-9a-z\\(\\)\\[\\]]+)(\\s*=\\s*(['\"])([^\\3]*?)\\3)?\\s*/ig;\n\n    var tagMatch;\n    var currentNode = rootNode;\n    var stack = [rootNode];\n    var stackIndex = 0;\n    var beforeLastIndex = 0;\n\n    while ((tagMatch = walker.match(tagReg)) != null) {\n        var tagEnd = tagMatch[1];\n        var tagName = tagMatch[2].toLowerCase();\n\n        pushTextNode(source.slice(\n            beforeLastIndex,\n            walker.index - tagMatch[0].length\n        ));\n\n        // 62: >\n        // 47: /\n        // 处理 </xxxx >\n        if (tagEnd && walker.currentCode() === 62) {\n            // 满足关闭标签的条件时，关闭标签\n            // 向上查找到对应标签，找不到时忽略关闭\n            var closeIndex = stackIndex;\n\n            // #[begin] error\n            // 如果正在闭合一个自闭合的标签，例如 </input>，报错\n            if (autoCloseTags[tagName]) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack, tagName) + ' is a `auto closed` tag, '\n                    + 'so it cannot be closed with </' + tagName + '>'\n                );\n            }\n\n            // 如果关闭的 tag 和当前打开的不一致，报错\n            if (\n                stack[closeIndex].tagName !== tagName\n                // 这里要把 table 自动添加 tbody 的情况给去掉\n                && !(tagName === 'table' && stack[closeIndex].tagName === 'tbody')\n            ) {\n                throw new Error('[SAN ERROR] ' + getXPath(stack) + ' is closed with ' + tagName);\n            }\n            // #[end]\n\n            while (closeIndex > 0 && stack[closeIndex].tagName !== tagName) {\n                closeIndex--;\n            }\n\n            if (closeIndex > 0) {\n                stackIndex = closeIndex - 1;\n                currentNode = stack[stackIndex];\n            }\n            walker.go(1);\n        }\n\n        // #[begin] error\n        // 处理 </xxx 非正常闭合标签\n        else if (tagEnd) {\n\n            // 如果闭合标签时，匹配后的下一个字符是 <，即下一个标签的开始，那么当前闭合标签未闭合\n            if (walker.currentCode() === 60) {\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack)\n                    + '\\'s close tag not closed'\n                );\n            }\n\n            // 闭合标签有属性\n            throw new Error(''\n                + '[SAN ERROR] ' + getXPath(stack)\n                + '\\'s close tag has attributes'\n            );\n\n        }\n        // #[end]\n\n        else if (!tagEnd) {\n            var aElement = createANode({\n                tagName: tagName\n            });\n            var tagClose = autoCloseTags[tagName];\n\n            // 解析 attributes\n\n            /* eslint-disable no-constant-condition */\n            while (1) {\n            /* eslint-enable no-constant-condition */\n\n                var nextCharCode = walker.currentCode();\n\n                // 标签结束时跳出 attributes 读取\n                // 标签可能直接结束或闭合结束\n                if (nextCharCode === 62) {\n                    walker.go(1);\n                    break;\n                }\n                // 遇到 /> 按闭合处理\n                else if (nextCharCode === 47\n                    && walker.charCode(walker.index + 1) === 62\n                ) {\n                    walker.go(2);\n                    tagClose = 1;\n                    break;\n                }\n\n                // #[begin] error\n                // 在处理一个 open 标签时，如果遇到了 <， 即下一个标签的开始，则当前标签未能正常闭合，报错\n                if (nextCharCode === 60) {\n                    throw new Error('[SAN ERROR] ' + getXPath(stack, tagName) + ' is not closed');\n                }\n                // #[end]\n\n                // 读取 attribute\n                var attrMatch = walker.match(attrReg);\n                if (attrMatch) {\n\n                    // #[begin] error\n                    // 如果属性有 =，但没取到 value，报错\n                    if (\n                        walker.charCode(attrMatch.index + attrMatch[1].length) === 61\n                        && !attrMatch[2]\n                    ) {\n                        throw new Error(''\n                            + '[SAN ERROR] ' + getXPath(stack, tagName) + ' attribute `'\n                            + attrMatch[1] + '` is not wrapped with \"\"'\n                        );\n                    }\n                    // #[end]\n\n                    integrateAttr(\n                        aElement,\n                        attrMatch[1],\n                        attrMatch[2] ? attrMatch[4] : '',\n                        options\n                    );\n                }\n\n            }\n\n            // match if directive for else/elif directive\n            var elseDirective = aElement.directives['else'] || aElement.directives.elif; // eslint-disable-line dot-notation\n            if (elseDirective) {\n                var parentChildrenLen = currentNode.children.length;\n\n                while (parentChildrenLen--) {\n                    var parentChild = currentNode.children[parentChildrenLen];\n                    if (parentChild.textExpr) {\n                        currentNode.children.splice(parentChildrenLen, 1);\n                        continue;\n                    }\n\n                    // #[begin] error\n                    if (!parentChild.directives['if']) { // eslint-disable-line dot-notation\n                        throw new Error('[SAN FATEL] else not match if.');\n                    }\n                    // #[end]\n\n                    parentChild.elses = parentChild.elses || [];\n                    parentChild.elses.push(aElement);\n\n                    break;\n                }\n            }\n            else {\n                if (aElement.tagName === 'tr' && currentNode.tagName === 'table') {\n                    var tbodyNode = createANode({\n                        tagName: 'tbody'\n                    });\n                    currentNode.children.push(tbodyNode);\n                    currentNode = tbodyNode;\n                    stack[++stackIndex] = tbodyNode;\n                }\n\n                currentNode.children.push(aElement);\n            }\n\n            if (!tagClose) {\n                currentNode = aElement;\n                stack[++stackIndex] = aElement;\n            }\n        }\n\n        beforeLastIndex = walker.index;\n    }\n\n    pushTextNode(walker.cut(beforeLastIndex));\n\n    return rootNode;\n\n    /**\n     * 在读取栈中添加文本节点\n     *\n     * @inner\n     * @param {string} text 文本内容\n     */\n    function pushTextNode(text) {\n        switch (options.trimWhitespace) {\n            case 'blank':\n                if (/^\\s+$/.test(text)) {\n                    text = null;\n                }\n                break;\n\n            case 'all':\n                text = text.replace(/(^\\s+|\\s+$)/g, '');\n                break;\n        }\n\n        if (text) {\n            currentNode.children.push(createANode({\n                textExpr: parseText(text, options.delimiters)\n            }));\n        }\n    }\n}\n\n/* eslint-enable fecs-max-statements */\n\n// exports = module.exports = parseTemplate;\n\n\n/**\n * @file 默认filter\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/* eslint-disable fecs-camelcase */\n/* eslint-disable guard-for-in */\n\n/**\n * 默认filter\n *\n * @const\n * @type {Object}\n */\nvar DEFAULT_FILTERS = {\n\n    /**\n     * URL编码filter\n     *\n     * @param {string} source 源串\n     * @return {string} 替换结果串\n     */\n    url: encodeURIComponent,\n\n    _class: function (source) {\n        if (source instanceof Array) {\n            return source.join(' ');\n        }\n\n        return source;\n    },\n\n    _style: function (source) {\n        if (typeof source === 'object') {\n            var result = '';\n            for (var key in source) {\n                result += key + ':' + source[key] + ';';\n            }\n\n            return result;\n        }\n\n        return source;\n    },\n\n    _sep: function (source, sep) {\n        return source ? sep + source : source;\n    }\n};\n/* eslint-enable fecs-camelcase */\n\n// exports = module.exports = DEFAULT_FILTERS;\n\n\n/**\n * @file 表达式计算\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var DEFAULT_FILTERS = require('./default-filters');\n// var evalArgs = require('./eval-args');\n// var dataCache = require('./data-cache');\n\n/**\n * 计算表达式的值\n *\n * @param {Object} expr 表达式对象\n * @param {Data} data 数据容器对象\n * @param {Component=} owner 所属组件环境\n * @return {*}\n */\nfunction evalExpr(expr, data, owner) {\n    if (expr.value != null) {\n        return expr.value;\n    }\n\n    var value = dataCache.get(data, expr);\n\n    if (value == null) {\n        switch (expr.type) {\n            case ExprType.UNARY:\n                value = !evalExpr(expr.expr, data, owner);\n                break;\n\n            case ExprType.BINARY:\n                var leftValue = evalExpr(expr.segs[0], data, owner);\n                var rightValue = evalExpr(expr.segs[1], data, owner);\n\n                /* eslint-disable eqeqeq */\n                switch (expr.operator) {\n                    case 37:\n                        value = leftValue % rightValue;\n                        break;\n                    case 43:\n                        value = leftValue + rightValue;\n                        break;\n                    case 45:\n                        value = leftValue - rightValue;\n                        break;\n                    case 42:\n                        value = leftValue * rightValue;\n                        break;\n                    case 47:\n                        value = leftValue / rightValue;\n                        break;\n                    case 60:\n                        value = leftValue < rightValue;\n                        break;\n                    case 62:\n                        value = leftValue > rightValue;\n                        break;\n                    case 76:\n                        value = leftValue && rightValue;\n                        break;\n                    case 94:\n                        value = leftValue != rightValue;\n                        break;\n                    case 121:\n                        value = leftValue <= rightValue;\n                        break;\n                    case 122:\n                        value = leftValue == rightValue;\n                        break;\n                    case 123:\n                        value = leftValue >= rightValue;\n                        break;\n                    case 155:\n                        value = leftValue !== rightValue;\n                        break;\n                    case 183:\n                        value = leftValue === rightValue;\n                        break;\n                    case 248:\n                        value = leftValue || rightValue;\n                        break;\n                }\n                /* eslint-enable eqeqeq */\n                break;\n\n            case ExprType.TERTIARY:\n                value = evalExpr(\n                    expr.segs[evalExpr(expr.segs[0], data, owner) ? 1 : 2],\n                    data,\n                    owner\n                );\n                break;\n\n            case ExprType.ACCESSOR:\n                value = data.get(expr);\n                break;\n\n            case ExprType.INTERP:\n                value = evalExpr(expr.expr, data, owner);\n\n                if (owner) {\n                    for (var i = 0, l = expr.filters.length; i < l; i++) {\n                        var filter = expr.filters[i];\n                        var filterName = filter.name.paths[0].value;\n\n                        if (owner.filters[filterName]) {\n                            value = owner.filters[filterName].apply(\n                                owner,\n                                [value].concat(evalArgs(filter.args, data, owner))\n                            );\n                        }\n                        else if (DEFAULT_FILTERS[filterName]) {\n                            value = DEFAULT_FILTERS[filterName](\n                                value,\n                                filter.args[0] ? filter.args[0].value : ''\n                            );\n                        }\n                    }\n                }\n\n                if (value == null) {\n                    value = '';\n                }\n\n                break;\n\n            /* eslint-disable no-redeclare */\n            case ExprType.TEXT:\n                var buf = '';\n                for (var i = 0, l = expr.segs.length; i < l; i++) {\n                    var seg = expr.segs[i];\n                    buf += seg.value || evalExpr(seg, data, owner);\n                }\n                return buf;\n        }\n\n        dataCache.set(data, expr, value);\n    }\n\n    return value;\n}\n\n// exports = module.exports = evalExpr;\n\n\n/**\n * @file 为函数调用计算参数数组的值\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 为函数调用计算参数数组的值\n *\n * @param {Array} args 参数表达式列表\n * @param {Data} data 数据环境\n * @param {Component} owner 组件环境\n * @return {Array}\n */\nfunction evalArgs(args, data, owner) {\n    var result = [];\n    for (var i = 0; i < args.length; i++) {\n        result.push(evalExpr(args[i], data, owner));\n    }\n\n    return result;\n}\n\n// exports = module.exports = evalArgs;\n\n\n/**\n * @file 数据缓存管理器\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\nvar dataCacheSource = {};\nvar dataCacheClearly = 1;\n\n/**\n * 数据缓存管理器\n *\n * @const\n * @type {Object}\n */\nvar dataCache = {\n    clear: function () {\n        if (!dataCacheClearly) {\n            dataCacheClearly = 1;\n            dataCacheSource = {};\n        }\n    },\n\n    set: function (data, expr, value) {\n        if (expr.raw) {\n            dataCacheClearly = 0;\n            (dataCacheSource[data.id] = dataCacheSource[data.id] || {})[expr.raw] = value;\n        }\n    },\n\n    get: function (data, expr) {\n        if (expr.raw && dataCacheSource[data.id]) {\n            return dataCacheSource[data.id][expr.raw];\n        }\n    }\n};\n\n\n// exports = module.exports = dataCache;\n\n\n/**\n * @file 比较变更表达式与目标表达式之间的关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var each = require('../util/each');\n\n/**\n * 判断变更表达式与多个表达式之间的关系，0为完全没关系，1为有关系\n *\n * @inner\n * @param {Object} changeExpr 目标表达式\n * @param {Array} exprs 多个源表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompareExprs(changeExpr, exprs, data) {\n    for (var i = 0, l = exprs.length; i < l; i++) {\n        if (changeExprCompare(changeExpr, exprs[i], data)) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * 比较变更表达式与目标表达式之间的关系，用于视图更新判断\n * 视图更新需要根据其关系，做出相应的更新行为\n *\n * 0: 完全没关系\n * 1: 变更表达式是目标表达式的母项(如a与a.b) 或 表示需要完全变化\n * 2: 变更表达式是目标表达式相等\n * >2: 变更表达式是目标表达式的子项，如a.b.c与a.b\n *\n * @param {Object} changeExpr 变更表达式\n * @param {Object} expr 要比较的目标表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompare(changeExpr, expr, data) {\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            var len = paths.length;\n            var changePaths = changeExpr.paths;\n            var changeLen = changePaths.length;\n\n            var result = 1;\n            for (var i = 0; i < len; i++) {\n                var pathExpr = paths[i];\n\n                if (pathExpr.type === ExprType.ACCESSOR\n                    && changeExprCompare(changeExpr, pathExpr, data)\n                ) {\n                    return 1;\n                }\n\n                if (result && i < changeLen\n                    /* eslint-disable eqeqeq */\n                    && (pathExpr.value || evalExpr(pathExpr, data))\n                        != (changePaths[i].value || evalExpr(changePaths[i], data))\n                    /* eslint-enable eqeqeq */\n                ) {\n                    result = 0;\n                }\n            }\n\n            if (result) {\n                result = Math.max(1, changeLen - len + 2);\n            }\n            return result;\n\n        case ExprType.UNARY:\n            return changeExprCompare(changeExpr, expr.expr, data) ? 1 : 0;\n\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            return changeExprCompareExprs(changeExpr, expr.segs, data);\n\n        case ExprType.INTERP:\n            if (!changeExprCompare(changeExpr, expr.expr, data)) {\n                var filterResult;\n                each(expr.filters, function (filter) {\n                    filterResult = changeExprCompareExprs(changeExpr, filter.args, data);\n                    return !filterResult;\n                });\n\n                return filterResult ? 1 : 0;\n            }\n\n            return 1;\n    }\n\n    return 0;\n}\n\n// exports = module.exports = changeExprCompare;\n\n\n/**\n * @file 数据变更类型枚举\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 数据变更类型枚举\n *\n * @const\n * @type {Object}\n */\nvar DataChangeType = {\n    SET: 1,\n    SPLICE: 2\n};\n\n// exports = module.exports = DataChangeType;\n\n\n/**\n * @file 生命周期类\n * @author errorrik(errorrik@gmail.com)\n */\n\nfunction lifeCycleOwnIs(name) {\n    return this[name];\n}\n\n/* eslint-disable fecs-valid-var-jsdoc */\n/**\n * 节点生命周期信息\n *\n * @inner\n * @type {Object}\n */\nvar LifeCycle = {\n    start: {},\n\n    compiled: {\n        is: lifeCycleOwnIs,\n        compiled: true\n    },\n\n    inited: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true\n    },\n\n    painting: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        painting: true\n    },\n\n    created: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true\n    },\n\n    attached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true\n    },\n\n    leaving: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true,\n        leaving: true\n    },\n\n    detached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        detached: true\n    },\n\n    disposed: {\n        is: lifeCycleOwnIs,\n        disposed: true\n    }\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n\n\n// exports = module.exports = LifeCycle;\n\n\n/**\n * @file 节点类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 节点类型\n *\n * @const\n * @type {Object}\n */\nvar NodeType = {\n    TEXT: 1,\n    IF: 2,\n    FOR: 3,\n    ELEM: 4,\n    CMPT: 5,\n    SLOT: 6,\n    TPL: 7\n};\n\n// exports = module.exports = NodeType;\n\n\n/**\n * @file 获取 ANode props 数组中相应 name 的项\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 获取 ANode props 数组中相应 name 的项\n *\n * @param {Object} aNode ANode对象\n * @param {string} name name属性匹配串\n * @return {Object}\n */\nfunction getANodeProp(aNode, name) {\n    var index = aNode.hotspot.props[name];\n    if (index != null) {\n        return aNode.props[index];\n    }\n}\n\n// exports = module.exports = getANodeProp;\n\n\n/**\n * @file 获取属性处理对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var contains = require('../util/contains');\n// var empty = require('../util/empty');\n// var svgTags = require('../browser/svg-tags');\n// var evalExpr = require('../runtime/eval-expr');\n// var getANodeProp = require('./get-a-node-prop');\n// var NodeType = require('./node-type');\n\n\n/**\n * HTML 属性和 DOM 操作属性的对照表\n *\n * @inner\n * @const\n * @type {Object}\n */\nvar HTML_ATTR_PROP_MAP = {\n    'readonly': 'readOnly',\n    'cellpadding': 'cellPadding',\n    'cellspacing': 'cellSpacing',\n    'colspan': 'colSpan',\n    'rowspan': 'rowSpan',\n    'valign': 'vAlign',\n    'usemap': 'useMap',\n    'frameborder': 'frameBorder',\n    'for': 'htmlFor'\n};\n\n/**\n * 默认的元素的属性设置的变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandler = {\n    prop: function (el, value, name, element) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n\n        // input 的 type 是个特殊属性，其实也应该用 setAttribute\n        // 但是 type 不应该运行时动态改变，否则会有兼容性问题\n        // 所以这里直接就不管了\n        if (propName in el) {\n            el[propName] = value == null ? '' : value;\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n\n        // attribute 绑定的是 text，所以不会出现 null 的情况，这里无需处理\n        // 换句话来说，san 是做不到 attribute 时有时无的\n        // if (value == null) {\n        //     el.removeAttribute(name);\n        // }\n    },\n\n    output: function (element, bindInfo, data) {\n        data.set(bindInfo.expr, element.el[bindInfo.name], {\n            target: {\n                id: element.id,\n                prop: bindInfo.name\n            }\n        });\n    }\n};\n\nvar svgPropHandler = {\n    prop: function (el, value, name) {\n        el.setAttribute(name, value);\n    }\n};\n\nvar boolPropHandler = {\n    prop: function (el, value, name, element, prop) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        el[propName] = !!(prop && prop.raw === ''\n            || value && value !== 'false' && value !== '0');\n    }\n};\n\n/* eslint-disable fecs-properties-quote */\n/**\n * 默认的属性设置变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandlers = {\n    style: {\n        prop: function (el, value) {\n            el.style.cssText = value;\n        }\n    },\n\n    'class': { // eslint-disable-line\n        prop: function (el, value) {\n            el.className = value;\n        }\n    },\n\n    slot: {\n        prop: empty\n    },\n\n    readonly: boolPropHandler,\n    disabled: boolPropHandler,\n    autofocus: boolPropHandler,\n    required: boolPropHandler,\n    draggable: boolPropHandler\n};\n/* eslint-enable fecs-properties-quote */\n\nvar analInputChecker = {\n    checkbox: contains,\n    radio: function (a, b) {\n        return a === b;\n    }\n};\n\nfunction analInputCheckedState(element, value, oper) {\n    var bindValue = getANodeProp(element.aNode, 'value');\n    var bindType = getANodeProp(element.aNode, 'type');\n\n    if (bindValue && bindType) {\n        var type = evalExpr(bindType.expr, element.scope, element.owner);\n\n        if (analInputChecker[type]) {\n            var bindChecked = getANodeProp(element.aNode, 'checked');\n            if (!bindChecked.hintExpr) {\n                bindChecked.hintExpr = bindValue.expr;\n            }\n\n            return !!analInputChecker[type](\n                value,\n                evalExpr(bindValue.expr, element.scope, element.owner)\n            );\n        }\n    }\n}\n\nvar elementPropHandlers = {\n    input: {\n        multiple: boolPropHandler,\n        checked: {\n            prop: function (el, value, name, element) {\n                var state = analInputCheckedState(element, value);\n\n                boolPropHandler.prop(\n                    el,\n                    state != null ? state : value,\n                    'checked',\n                    element\n                );\n            },\n\n            output: function (element, bindInfo, data) {\n                var el = element.el;\n                var bindValue = getANodeProp(element.aNode, 'value');\n                var bindType = getANodeProp(element.aNode, 'type') || {};\n\n                if (bindValue && bindType) {\n                    switch (bindType.raw) {\n                        case 'checkbox':\n                            data[el.checked ? 'push' : 'remove'](bindInfo.expr, el.value);\n                            return;\n\n                        case 'radio':\n                            el.checked && data.set(bindInfo.expr, el.value, {\n                                target: {\n                                    id: element.id,\n                                    prop: bindInfo.name\n                                }\n                            });\n                            return;\n                    }\n                }\n\n                defaultElementPropHandler.output(element, bindInfo, data);\n            }\n        }\n    },\n\n    option: {\n        value: {\n            prop: function (el, value, name, element) {\n                defaultElementPropHandler.prop(el, value, name, element);\n\n                if (isOptionSelected(element, value)) {\n                    el.selected = true;\n                }\n            }\n        }\n    },\n\n    select: {\n        value: {\n            prop: function (el, value) {\n                el.value = value || '';\n            },\n\n            output: defaultElementPropHandler.output\n        }\n    }\n};\n\nfunction isOptionSelected(element, value) {\n    var parentSelect = element.parent;\n    while (parentSelect) {\n        if (parentSelect.tagName === 'select') {\n            break;\n        }\n\n        parentSelect = parentSelect.parent;\n    }\n\n\n    if (parentSelect) {\n        var selectValue = null;\n        var prop;\n        var expr;\n\n        if ((prop = getANodeProp(parentSelect.aNode, 'value'))\n            && (expr = prop.expr)\n        ) {\n            selectValue = parentSelect.nodeType === NodeType.CMPT\n                ? evalExpr(expr, parentSelect.data, parentSelect)\n                : evalExpr(expr, parentSelect.scope, parentSelect.owner)\n                || '';\n        }\n\n        if (selectValue === value) {\n            return 1;\n        }\n    }\n}\n\n\n/**\n * 获取属性处理对象\n *\n * @param {string} tagName 元素tag\n * @param {string} attrName 属性名\n * @return {Object}\n */\nfunction getPropHandler(tagName, attrName) {\n    if (svgTags[tagName]) {\n        return svgPropHandler;\n    }\n\n    var tagPropHandlers = elementPropHandlers[tagName];\n    if (!tagPropHandlers) {\n        tagPropHandlers = elementPropHandlers[tagName] = {};\n    }\n\n    var propHandler = tagPropHandlers[attrName];\n    if (!propHandler) {\n        propHandler = defaultElementPropHandlers[attrName] || defaultElementPropHandler;\n        tagPropHandlers[attrName] = propHandler;\n    }\n\n    return propHandler;\n}\n\n// exports = module.exports = getPropHandler;\n\n\n/**\n * @file 判断变更是否来源于元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 判断变更是否来源于元素，来源于元素时，视图更新需要阻断\n *\n * @param {Object} change 变更对象\n * @param {Element} element 元素\n * @param {string?} propName 属性名，可选。需要精确判断是否来源于此属性时传入\n * @return {boolean}\n */\nfunction isDataChangeByElement(change, element, propName) {\n    var changeTarget = change.option.target;\n    return changeTarget && changeTarget.id === element.id\n        && (!propName || changeTarget.prop === propName);\n}\n\n// exports = module.exports = isDataChangeByElement;\n\n\n/**\n * @file 在对象上使用accessor表达式查找方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 在对象上使用accessor表达式查找方法\n *\n * @param {Object} source 源对象\n * @param {Object} nameExpr 表达式\n * @param {Data} data 所属数据环境\n * @return {Function}\n */\nfunction findMethod(source, nameExpr, data) {\n    var method = source;\n\n    for (var i = 0; method != null && i < nameExpr.paths.length; i++) {\n        method = method[evalExpr(nameExpr.paths[i], data)];\n    }\n\n    return method;\n}\n\n// exports = module.exports = findMethod;\n\n\n/**\n * @file 数据类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var DataChangeType = require('./data-change-type');\n// var createAccessor = require('../parser/create-accessor');\n// var parseExpr = require('../parser/parse-expr');\n// var guid = require('../util/guid');\n// var dataCache = require('./data-cache');\n\n/**\n * 数据类\n *\n * @class\n * @param {Object?} data 初始数据\n * @param {Model?} parent 父级数据容器\n */\nfunction Data(data, parent) {\n    this.id = guid();\n    this.parent = parent;\n    this.raw = data || {};\n    this.listeners = [];\n}\n\n// #[begin] error\n// 以下两个函数只在开发模式下可用，在生产模式下不存在\n/**\n * DataTypes 检测\n */\nData.prototype.checkDataTypes = function () {\n    if (this.typeChecker) {\n        this.typeChecker(this.raw);\n    }\n};\n\n/**\n * 设置 type checker\n *\n * @param  {Function} typeChecker 类型校验器\n */\nData.prototype.setTypeChecker = function (typeChecker) {\n    this.typeChecker = typeChecker;\n};\n\n// #[end]\n\n/**\n * 添加数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.listen = function (listener) {\n    if (typeof listener === 'function') {\n        this.listeners.push(listener);\n    }\n};\n\n/**\n * 移除数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.unlisten = function (listener) {\n    var len = this.listeners.length;\n    while (len--) {\n        if (!listener || this.listeners[len] === listener) {\n            this.listeners.splice(len, 1);\n        }\n    }\n};\n\n/**\n * 触发数据变更\n *\n * @param {Object} change 变更信息对象\n */\nData.prototype.fire = function (change) {\n    if (change.option.silent || change.option.silence || change.option.quiet) {\n        return;\n    }\n\n    for (var i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].call(this, change);\n    }\n};\n\n/**\n * 获取数据项\n *\n * @param {string|Object?} expr 数据项路径\n * @param {Data?} callee 当前数据获取的调用环境\n * @return {*}\n */\nData.prototype.get = function (expr, callee) {\n    var value = this.raw;\n    if (!expr) {\n        return value;\n    }\n\n    expr = parseExpr(expr);\n\n    var paths = expr.paths;\n    callee = callee || this;\n\n    value = value[paths[0].value];\n\n    if (value == null && this.parent) {\n        value = this.parent.get(expr, callee);\n    }\n    else {\n        for (var i = 1, l = paths.length; value != null && i < l; i++) {\n            value = value[paths[i].value || evalExpr(paths[i], callee)];\n        }\n    }\n\n    return value;\n};\n\n\n/**\n * 数据对象变更操作\n *\n * @inner\n * @param {Object|Array} source 要变更的源数据\n * @param {Array} exprPaths 属性路径\n * @param {*} value 变更属性值\n * @param {Data} data 对应的Data对象\n * @return {*} 变更后的新数据\n */\nfunction immutableSet(source, exprPaths, value, data) {\n    if (exprPaths.length === 0) {\n        return value;\n    }\n\n    var prop = evalExpr(exprPaths[0], data);\n    var result;\n\n    if (source instanceof Array) {\n        var index = +prop;\n\n        result = source.slice(0);\n        result[isNaN(index) ? prop : index] = immutableSet(source[index], exprPaths.slice(1), value, data);\n\n        return result;\n    }\n    else if (typeof source === 'object') {\n        result = {};\n\n        for (var key in source) {\n            if (key !== prop) {\n                result[key] = source[key];\n            }\n        }\n\n        result[prop] = immutableSet(source[prop] || {}, exprPaths.slice(1), value, data);\n\n        return result;\n    }\n\n    return source;\n}\n\n/**\n * 设置数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.set = function (expr, value, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data set: ' + exprRaw);\n    }\n    // #[end]\n\n    if (this.get(expr) === value && !option.force) {\n        return;\n    }\n\n    dataCache.clear();\n    this.raw = immutableSet(this.raw, expr.paths, value, this);\n    this.fire({\n        type: DataChangeType.SET,\n        expr: expr,\n        value: value,\n        option: option\n    });\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n};\n\n/**\n * 合并更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object} source 待合并的数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.merge = function (expr, source, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data merge: ' + exprRaw);\n    }\n\n    if (typeof this.get(expr) !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Target of Type \\'object\\'; got ' + typeof oldValue);\n    }\n\n    if (typeof source !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Source of Type \\'object\\'; got ' + typeof source);\n    }\n    // #[end]\n\n    for (var key in source) { // eslint-disable-line\n        this.set(\n            createAccessor(\n                expr.paths.concat(\n                    [\n                        {\n                            type: ExprType.STRING,\n                            value: key\n                        }\n                    ]\n                )\n            ),\n            source[key],\n            option\n        );\n    }\n};\n\n/**\n * 基于更新函数更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Function} fn 数据处理函数\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.apply = function (expr, fn, option) {\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data apply: ' + exprRaw);\n    }\n    // #[end]\n\n    var oldValue = this.get(expr);\n\n    // #[begin] error\n    if (typeof fn !== 'function') {\n        throw new Error(\n            '[SAN ERROR] Invalid Argument\\'s Type in Data apply: '\n            + 'Expected Function but got ' + typeof fn\n        );\n    }\n    // #[end]\n\n    this.set(expr, fn(oldValue), option);\n};\n\n/**\n * 数组数据项splice操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Array} args splice 接受的参数列表，数组项与Array.prototype.splice的参数一致\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {Array} 新数组\n */\nData.prototype.splice = function (expr, args, option) {\n    option = option || {};\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== ExprType.ACCESSOR) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data splice: ' + exprRaw);\n    }\n    // #[end]\n\n    var target = this.get(expr);\n    var returnValue = [];\n\n    if (target instanceof Array) {\n        var index = args[0];\n        if (index < 0 || index > target.length) {\n            return;\n        }\n\n        var newArray = target.slice(0);\n        returnValue = newArray.splice.apply(newArray, args);\n        dataCache.clear();\n        this.raw = immutableSet(this.raw, expr.paths, newArray, this);\n\n        this.fire({\n            expr: expr,\n            type: DataChangeType.SPLICE,\n            index: index,\n            deleteCount: returnValue.length,\n            value: returnValue,\n            insertions: args.slice(2),\n            option: option\n        });\n    }\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n    return returnValue;\n};\n\n/**\n * 数组数据项push操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要push的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.push = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [target.length, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项pop操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.pop = function (expr, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        if (len) {\n            return this.splice(expr, [len - 1, 1], option)[0];\n        }\n    }\n};\n\n/**\n * 数组数据项shift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.shift = function (expr, option) {\n    return this.splice(expr, [0, 1], option)[0];\n};\n\n/**\n * 数组数据项unshift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要unshift的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.unshift = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [0, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {number} index 要移除项的索引\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.removeAt = function (expr, index, option) {\n    this.splice(expr, [index, 1], option);\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 要移除的项\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.remove = function (expr, value, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        while (len--) {\n            if (target[len] === value) {\n                this.splice(expr, [len, 1], option);\n                break;\n            }\n        }\n    }\n};\n\n// exports = module.exports = Data;\n\n\n/**\n * @file 声明式事件的监听函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var Data = require('../runtime/data');\n\n/**\n * 声明式事件的监听函数\n *\n * @param {Object} eventBind 绑定信息对象\n * @param {boolean} isComponentEvent 是否组件自定义事件\n * @param {Data} data 数据环境\n * @param {Event} e 事件对象\n */\nfunction eventDeclarationListener(eventBind, isComponentEvent, data, e) {\n    var method = findMethod(this, eventBind.expr.name, data);\n\n    if (typeof method === 'function') {\n        var scope = new Data(\n            {$event: isComponentEvent ? e : e || window.event},\n            data\n        );\n        method.apply(this, evalArgs(eventBind.expr.args, scope, this));\n    }\n}\n\n// exports = module.exports = eventDeclarationListener;\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar hotTags = splitStr2Obj('div,span,input,button,textarea,form,label,dl,dt,dd,ul,ol,li,a,b,u,h1,h2,h3,h4,h5,h6');\n\n// exports = module.exports = hotTags;\n\n\n/**\n * @file 是否浏览器环境\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar isBrowser = typeof window !== 'undefined';\n\n// exports = module.exports = isBrowser;\n\n\n/**\n * @file insertBefore 方法的兼容性封装\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * insertBefore 方法的兼容性封装\n *\n * @param {HTMLNode} targetEl 要插入的节点\n * @param {HTMLElement} parentEl 父元素\n * @param {HTMLElement?} beforeEl 在此元素之前插入\n */\nfunction insertBefore(targetEl, parentEl, beforeEl) {\n    if (parentEl) {\n        if (beforeEl) {\n            parentEl.insertBefore(targetEl, beforeEl);\n        }\n        else {\n            parentEl.appendChild(targetEl);\n        }\n    }\n}\n\n// exports = module.exports = insertBefore;\n\n\n/**\n * @file 判断元素是否不允许设置HTML\n * @author errorrik(errorrik@gmail.com)\n */\n\n// some html elements cannot set innerHTML in old ie\n// see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n\n/**\n * 判断元素是否不允许设置HTML\n *\n * @param {HTMLElement} el 要判断的元素\n * @return {boolean}\n */\nfunction noSetHTML(el) {\n    return /^(col|colgroup|frameset|style|table|tbody|tfoot|thead|tr|select)$/i.test(el.tagName);\n}\n\n// exports = module.exports = noSetHTML;\n\n\n/**\n * @file  获取节点 stump 的 comment\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var noSetHTML = require('../browser/no-set-html');\n\n// #[begin] error\n/**\n * 获取节点 stump 的 comment\n *\n * @param {HTMLElement} el HTML元素\n */\nfunction warnSetHTML(el) {\n    // dont warn if not in browser runtime\n    if (!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document)) {\n        return;\n    }\n\n    // some html elements cannot set innerHTML in old ie\n    // see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    if (noSetHTML(el)) {\n        var message = '[SAN WARNING] set html for element \"' + el.tagName\n            + '\" may cause an error in old IE';\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnSetHTML;\n\n\n/**\n * @file 判断是否结束桩\n * @author errorrik(errorrik@gmail.com)\n */\n\n// #[begin] reverse\n/**\n * 判断是否结束桩\n *\n * @param {HTMLElement|HTMLComment} target 要判断的元素\n * @param {string} type 桩类型\n * @return {boolean}\n */\nfunction isEndStump(target, type) {\n    return target.nodeType === 8 && target.data === '/s-' + type;\n}\n// #[end]\n\n// exports = module.exports = isEndStump;\n\n\n/**\n * @file 获取节点在组件树中的路径\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var NodeType = require('./node-type');\n\n// #[begin] reverse\n/**\n * 获取节点在组件树中的路径\n *\n * @param {Node} node 节点对象\n * @return {Array}\n */\nfunction getNodePath(node) {\n    var nodePaths = [];\n    var nodeParent = node;\n    while (nodeParent) {\n        switch (nodeParent.nodeType) {\n            case NodeType.ELEM:\n                nodePaths.unshift(nodeParent.tagName);\n                break;\n\n            case NodeType.IF:\n                nodePaths.unshift('if');\n                break;\n\n            case NodeType.FOR:\n                nodePaths.unshift('for[' + nodeParent.anode.directives['for'].raw + ']'); // eslint-disable-line dot-notation\n                break;\n\n            case NodeType.SLOT:\n                nodePaths.unshift('slot[' + (nodeParent.name || 'default') + ']');\n                break;\n\n            case NodeType.TPL:\n                nodePaths.unshift('template');\n                break;\n\n            case NodeType.CMPT:\n                nodePaths.unshift('component[' + (nodeParent.subTag || 'root') + ']');\n                break;\n\n            case NodeType.TEXT:\n                nodePaths.unshift('text');\n                break;\n        }\n\n        nodeParent = nodeParent.parent;\n    }\n\n    return nodePaths;\n}\n// #[end]\n\n// exports = module.exports = getNodePath;\n\n\n/**\n * @file text 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var warnSetHTML = require('./warn-set-html');\n// var isEndStump = require('./is-end-stump');\n// var getNodePath = require('./get-node-path');\n\n\n/**\n * text 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TextNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n        if (currentNode) {\n            switch (currentNode.nodeType) {\n                case 8:\n                    if (currentNode.data === 's-text') {\n                        this.sel = currentNode;\n                        currentNode.data = this.id;\n                        reverseWalker.goNext();\n\n                        while (1) { // eslint-disable-line\n                            currentNode = reverseWalker.current;\n                            if (!currentNode) {\n                                throw new Error('[SAN REVERSE ERROR] Text end flag not found. \\nPaths: '\n                                    + getNodePath(this).join(' > '));\n                            }\n\n                            if (isEndStump(currentNode, 'text')) {\n                                this.el = currentNode;\n                                reverseWalker.goNext();\n                                currentNode.data = this.id;\n                                break;\n                            }\n\n                            reverseWalker.goNext();\n                        }\n                    }\n                    break;\n\n                case 3:\n                    reverseWalker.goNext();\n                    if (!this.aNode.textExpr.original) {\n                        this.el = currentNode;\n                    }\n                    break;\n            }\n        }\n        else {\n            this.el = document.createTextNode('');\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n        }\n    }\n    // #[end]\n}\n\nTextNode.prototype.nodeType = NodeType.TEXT;\n\n/**\n * 将text attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nTextNode.prototype.attach = function (parentEl, beforeEl) {\n    this.content = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n    if (this.aNode.textExpr.original) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, parentEl, beforeEl);\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, parentEl, beforeEl);\n\n        var tempFlag = document.createElement('script');\n        parentEl.insertBefore(tempFlag, this.el);\n        tempFlag.insertAdjacentHTML('beforebegin', this.content);\n        parentEl.removeChild(tempFlag);\n    }\n    else {\n        this.el = document.createTextNode(this.content);\n        insertBefore(this.el, parentEl, beforeEl);\n    }\n};\n\n/**\n * 销毁 text 节点\n */\nTextNode.prototype.dispose = function () {\n    this._prev = null;\n    this.el = null;\n    this.sel = null;\n};\n\nvar textUpdateProp = isBrowser\n    && (typeof document.createTextNode('').textContent === 'string'\n        ? 'textContent'\n        : 'data');\n\n/**\n * 更新 text 节点的视图\n *\n * @param {Array} changes 数据变化信息\n */\nTextNode.prototype._update = function (changes) {\n    if (this.aNode.textExpr.value) {\n        return;\n    }\n\n    var len = changes ? changes.length : 0;\n    while (len--) {\n        if (changeExprCompare(changes[len].expr, this.aNode.textExpr, this.scope)) {\n            var text = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n            if (text !== this.content) {\n                this.content = text;\n\n                if (this.aNode.textExpr.original) {\n                    var startRemoveEl = this.sel.nextSibling;\n                    var parentEl = this.el.parentNode;\n\n                    while (startRemoveEl !== this.el) {\n                        var removeTarget = startRemoveEl;\n                        startRemoveEl = startRemoveEl.nextSibling;\n                        removeEl(removeTarget);\n                    }\n\n                    // #[begin] error\n                    warnSetHTML(parentEl);\n                    // #[end]\n\n                    var tempFlag = document.createElement('script');\n                    parentEl.insertBefore(tempFlag, this.el);\n                    tempFlag.insertAdjacentHTML('beforebegin', text);\n                    parentEl.removeChild(tempFlag);\n                }\n                else {\n                    this.el[textUpdateProp] = text;\n                }\n            }\n\n            return;\n        }\n    }\n};\n\n// exports = module.exports = TextNode;\n\n\n/**\n * @file 判断变更数组是否影响到数据引用摘要\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 判断变更数组是否影响到数据引用摘要\n *\n * @param {Array} changes 变更数组\n * @param {Object} dataRef 数据引用摘要\n * @return {boolean}\n */\nfunction changesIsInDataRef(changes, dataRef) {\n    for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n\n        if (!change.overview) {\n            var paths = change.expr.paths;\n            change.overview = paths[0].value;\n\n            if (paths.length > 1) {\n                change.extOverview = paths[0].value + '.' + paths[1].value;\n                change.wildOverview = paths[0].value + '.*';\n            }\n        }\n\n        if (dataRef[change.overview]\n            || change.wildOverview && dataRef[change.wildOverview]\n            || change.extOverview && dataRef[change.extOverview]\n        ) {\n            return true;\n        }\n    }\n}\n\n// exports = module.exports = changesIsInDataRef;\n\n\n/**\n * @file 元素子节点遍历操作类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n\n// #[begin] reverse\n/**\n * 元素子节点遍历操作类\n *\n * @inner\n * @class\n * @param {HTMLElement} el 要遍历的元素\n */\nfunction DOMChildrenWalker(el) {\n    this.raw = [];\n    this.index = 0;\n    this.target = el;\n\n    var child = el.firstChild;\n    var next;\n    while (child) {\n        next = child.nextSibling;\n\n        switch (child.nodeType) {\n            case 3:\n                if (/^\\s*$/.test(child.data || child.textContent)) {\n                    removeEl(child);\n                }\n                else {\n                    this.raw.push(child);\n                }\n                break;\n\n            case 1:\n            case 8:\n                this.raw.push(child);\n        }\n\n        child = next;\n    }\n\n    this.current = this.raw[this.index];\n    this.next = this.raw[this.index + 1];\n}\n\n/**\n * 往下走一个元素\n */\nDOMChildrenWalker.prototype.goNext = function () {\n    this.current = this.raw[++this.index];\n    this.next = this.raw[this.index + 1];\n};\n// #[end]\n\n// exports = module.exports = DOMChildrenWalker;\n\n\n/**\n * @file 元素节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var removeEl = require('../browser/remove-el');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var evalExpr = require('../runtime/eval-expr');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var reverseElementChildren = require('./reverse-element-children');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementInitTagName = require('./element-init-tag-name');\n// var handleProp = require('./handle-prop');\n// var warnSetHTML = require('./warn-set-html');\n// var getNodePath = require('./get-node-path');\n\n/**\n * 元素节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction Element(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    elementInitTagName(this);\n\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n\n        if (!currentNode) {\n            throw new Error('[SAN REVERSE ERROR] Element not found. \\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.nodeType !== 1) {\n            throw new Error('[SAN REVERSE ERROR] Element type not match, expect 1 but '\n                + currentNode.nodeType + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.tagName.toLowerCase() !== this.tagName) {\n            throw new Error('[SAN REVERSE ERROR] Element tagName not match, expect '\n                + this.tagName + ' but meat ' + currentNode.tagName.toLowerCase() + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        this.el = currentNode;\n        reverseWalker.goNext();\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nElement.prototype.nodeType = NodeType.ELEM;\n\n\nElement.prototype.attach = elementOwnAttach;\nElement.prototype.detach = elementOwnDetach;\nElement.prototype.dispose = elementOwnDispose;\nElement.prototype._create = elementOwnCreate;\nElement.prototype._toPhase = elementOwnToPhase;\nElement.prototype._onEl = elementOwnOnEl;\n\nElement.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 视图更新\n *\n * @param {Array} changes 数据变化信息\n */\nElement.prototype._update = function (changes) {\n    if (!changesIsInDataRef(changes, this.aNode.hotspot.data)) {\n        return;\n    }\n\n    var me = this;\n\n    var dynamicProps = this.aNode.hotspot.dynamicProps;\n    for (var i = 0, l = dynamicProps.length; i < l; i++) {\n        var prop = dynamicProps[i];\n\n        for (var j = 0, changeLen = changes.length; j < changeLen; j++) {\n            var change = changes[j];\n\n            if (!isDataChangeByElement(change, this, prop.name)\n                && (\n                    changeExprCompare(change.expr, prop.expr, this.scope)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.scope)\n                )\n            ) {\n                handleProp(this, evalExpr(prop.expr, this.scope, this.owner), prop);\n                break;\n            }\n        }\n    }\n\n    var htmlDirective = this.aNode.directives.html;\n    if (htmlDirective) {\n        each(changes, function (change) {\n            if (changeExprCompare(change.expr, htmlDirective.value, me.scope)) {\n                // #[begin] error\n                warnSetHTML(me.el);\n                // #[end]\n                me.el.innerHTML = evalExpr(htmlDirective.value, me.scope, me.owner);\n                return false;\n            }\n        });\n    }\n    else {\n        elementUpdateChildren(this, changes);\n    }\n};\n\n/**\n * 执行完成attached状态的行为\n */\nElement.prototype._attached = elementOwnAttached;\n\n// exports = module.exports = Element;\n\n\n/**\n * @file 销毁节点，清空节点上的无用成员\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 销毁节点\n *\n * @param {Object} node 节点对象\n */\nfunction nodeDispose(node) {\n    node.el = null;\n    node.sel = null;\n    node.owner = null;\n    node.scope = null;\n    node.aNode = null;\n    node.parent = null;\n    node.parentComponent = null;\n    node.children = null;\n\n    if (node._toPhase) {\n        node._toPhase('disposed');\n    }\n\n    if (node._ondisposed) {\n        node._ondisposed();\n    }\n}\n\n// exports = module.exports = nodeDispose;\n\n\n/**\n * @file 通过组件反解创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n// #[begin] reverse\n/**\n * 通过组件反解创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {DOMChildrenWalker} reverseWalker 子元素遍历对象\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createReverseNode(aNode, reverseWalker, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent, reverseWalker);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent, reverseWalker);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName,\n                    reverseWalker: reverseWalker\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent, reverseWalker);\n}\n// #[end]\n\n// exports = module.exports = createReverseNode;\n\n\n/**\n * @file 销毁释放元素的子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 销毁释放元素的子元素\n *\n * @param {Object} element 元素节点\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementDisposeChildren(element, noDetach, noTransition) {\n    var children = element.children;\n    var len = children && children.length;\n    while (len--) {\n        children[len].dispose(noDetach, noTransition);\n    }\n}\n\n// exports = module.exports = elementDisposeChildren;\n\n\n/**\n * @file 更新元素的子元素视图\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 更新元素的子元素视图\n *\n * @param {Object} element 要更新的元素\n * @param {Array} changes 数据变化信息\n */\nfunction elementUpdateChildren(element, changes) {\n    for (var i = 0, l = element.children.length; i < l; i++) {\n        element.children[i]._update(changes);\n    }\n}\n\n// exports = module.exports = elementUpdateChildren;\n\n\n/**\n * @file 使元素节点到达相应的生命周期\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var LifeCycle = require('./life-cycle');\n\n/**\n * 使元素节点到达相应的生命周期\n *\n * @param {string} name 生命周期名称\n */\nfunction elementOwnToPhase(name) {\n    this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n}\n\n// exports = module.exports = elementOwnToPhase;\n\n\n/**\n * @file 创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var hotTags = require('../browser/hot-tags');\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n\n/**\n * 创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createNode(aNode, parent, scope) {\n    var parentIsComponent = parent.nodeType === NodeType.CMPT;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent);\n    }\n\n    if (hotTags[aNode.tagName]) {\n        return new Element(aNode, owner, scope, parent);\n    }\n\n\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent);\n\n        default:\n            var ComponentType = owner.getComponentType(aNode);\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent);\n}\n\n// exports = module.exports = createNode;\n\n\n/**\n * @file 生成子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n\n/**\n * 生成子元素\n *\n * @param {Element} element 元素\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction genElementChildren(element, parentEl, beforeEl) {\n    parentEl = parentEl || element.el;\n\n    var aNodeChildren = element.aNode.children;\n    for (var i = 0; i < aNodeChildren.length; i++) {\n        var child = createNode(aNodeChildren[i], element);\n        element.children.push(child);\n        child.attach(parentEl, beforeEl);\n    }\n}\n\n// exports = module.exports = genElementChildren;\n\n\n/**\n * @file 将没有 root 只有 children 的元素 attach 到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var insertBefore = require('../browser/insert-before');\n// var genElementChildren = require('./gen-element-children');\n\n\n/**\n * 将没有 root 只有 children 的元素 attach 到页面\n * 主要用于 slot 和 template\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction nodeOwnOnlyChildrenAttach(parentEl, beforeEl) {\n    this.sel = document.createComment(this.id);\n    insertBefore(this.sel, parentEl, beforeEl);\n\n    genElementChildren(this, parentEl, beforeEl);\n\n    this.el = document.createComment(this.id);\n    insertBefore(this.el, parentEl, beforeEl);\n\n    this._toPhase('attached');\n}\n\n// exports = module.exports = nodeOwnOnlyChildrenAttach;\n\n\n/**\n * @file slot 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var createAccessor = require('../parser/create-accessor');\n// var evalExpr = require('../runtime/eval-expr');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n\n/**\n * slot 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction SlotNode(aNode, owner, scope, parent, reverseWalker) {\n    var realANode = createANode();\n    this.aNode = realANode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // calc slot name\n    this.nameBind = getANodeProp(aNode, 'name');\n    if (this.nameBind) {\n        this.isNamed = true;\n        this.name = evalExpr(this.nameBind.expr, this.scope, this.owner);\n    }\n\n    // calc aNode children\n    var givenSlots = owner.givenSlots;\n    var givenChildren;\n    if (givenSlots) {\n        givenChildren = this.isNamed ? givenSlots.named[this.name] : givenSlots.noname;\n    }\n\n    if (givenChildren) {\n        this.isInserted = true;\n    }\n\n    realANode.children = givenChildren || aNode.children.slice(0);\n\n    var me = this;\n\n    // calc scoped slot vars\n    realANode.vars = aNode.vars;\n    var initData = {};\n    each(realANode.vars, function (varItem) {\n        me.isScoped = true;\n        initData[varItem.name] = evalExpr(varItem.expr, scope, owner);\n    });\n\n    // child owner & child scope\n    if (this.isInserted) {\n        this.childOwner = owner.owner;\n        this.childScope = owner.scope;\n    }\n\n    if (this.isScoped) {\n        this.childScope = new Data(initData, this.childScope || this.scope);\n    }\n\n\n    owner.slotChildren.push(this);\n\n    // #[begin] reverse\n    if (reverseWalker) {\n\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\nSlotNode.prototype.nodeType = NodeType.SLOT;\n\n/**\n * 销毁释放 slot\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nSlotNode.prototype.dispose = function (noDetach, noTransition) {\n    this.childOwner = null;\n    this.childScope = null;\n\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\nSlotNode.prototype.attach = nodeOwnOnlyChildrenAttach;\nSlotNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n * @param {boolean=} isFromOuter 变化信息是否来源于父组件之外的组件\n * @return {boolean}\n */\nSlotNode.prototype._update = function (changes, isFromOuter) {\n    var me = this;\n\n    if (this.nameBind && evalExpr(this.nameBind.expr, this.scope, this.owner) !== me.name) {\n        this.owner._notifyNeedReload();\n        return false;\n    }\n\n    if (isFromOuter) {\n        if (this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n    else {\n        if (this.isScoped) {\n            each(this.aNode.vars, function (varItem) {\n                me.childScope.set(varItem.name, evalExpr(varItem.expr, me.scope, me.owner));\n            });\n\n\n            var scopedChanges = [];\n            each(changes, function (change) {\n                if (!me.isInserted) {\n                    scopedChanges.push(change);\n                }\n\n                each(me.aNode.vars, function (varItem) {\n                    var name = varItem.name;\n                    var relation = changeExprCompare(change.expr, varItem.expr, me.scope);\n\n                    if (relation < 1) {\n                        return;\n                    }\n\n                    if (change.type !== DataChangeType.SPLICE) {\n                        scopedChanges.push({\n                            type: DataChangeType.SET,\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            value: me.childScope.get(name),\n                            option: change.option\n                        });\n                    }\n                    else if (relation === 2) {\n                        scopedChanges.push({\n                            expr: createAccessor([\n                                {type: ExprType.STRING, value: name}\n                            ]),\n                            type: DataChangeType.SPLICE,\n                            index: change.index,\n                            deleteCount: change.deleteCount,\n                            value: change.value,\n                            insertions: change.insertions,\n                            option: change.option\n                        });\n                    }\n                });\n            });\n\n            elementUpdateChildren(this, scopedChanges);\n        }\n        else if (!this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n};\n\n// exports = module.exports = SlotNode;\n\n\n/**\n * @file 复制指令集合对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 复制指令集合对象\n *\n * @param {Object} source 要复制的指令集合对象\n * @param {Object=} excludes 需要排除的key集合\n * @return {Object}\n */\nfunction cloneDirectives(source, excludes) {\n    var result = {};\n    excludes = excludes || {};\n\n    for (var key in source) {\n        if (!excludes[key]) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = cloneDirectives;\n\n\n/**\n * @file 简单执行销毁节点的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n// var nodeDispose = require('./node-dispose');\n// var elementDisposeChildren = require('./element-dispose-children');\n\n/**\n * 简单执行销毁节点的行为\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nfunction nodeOwnSimpleDispose(noDetach) {\n    elementDisposeChildren(this, noDetach, 1);\n\n    if (!noDetach) {\n        removeEl(this.el);\n    }\n\n    nodeDispose(this);\n}\n\n// exports = module.exports = nodeOwnSimpleDispose;\n\n\n/**\n * @file 创建节点对应的 stump comment 元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\n/**\n * 创建节点对应的 stump comment 主元素\n */\nfunction nodeOwnCreateStump() {\n    this.el = this.el || document.createComment(this.id);\n}\n\n// exports = module.exports = nodeOwnCreateStump;\n\n\n/**\n * @file for 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var inherits = require('../util/inherits');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var cloneDirectives = require('../parser/clone-directives');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var dataCache = require('../runtime/data-cache');\n\n\n/**\n * 循环项的数据容器类\n *\n * @inner\n * @class\n * @param {Object} forElement for元素对象\n * @param {*} item 当前项的数据\n * @param {number} index 当前项的索引\n */\nfunction ForItemData(forElement, item, index) {\n    this.id = guid();\n    this.parent = forElement.scope;\n    this.raw = {};\n    this.listeners = [];\n\n    this.directive = forElement.aNode.directives['for']; // eslint-disable-line dot-notation\n    this.raw[this.directive.item.raw] = item;\n    this.raw[this.directive.index.raw] = index;\n}\n\n/**\n * 将数据操作的表达式，转换成为对parent数据操作的表达式\n * 主要是对item和index进行处理\n *\n * @param {Object} expr 表达式\n * @return {Object}\n */\nForItemData.prototype.exprResolve = function (expr) {\n    var directive = this.directive;\n    var me = this;\n\n    function resolveItem(expr) {\n        if (expr.type === ExprType.ACCESSOR\n            && expr.paths[0].value === directive.item.paths[0].value\n        ) {\n            return createAccessor(\n                directive.value.paths.concat(\n                    {\n                        type: ExprType.NUMBER,\n                        value: me.get(directive.index)\n                    },\n                    expr.paths.slice(1)\n                )\n            );\n        }\n\n        return expr;\n    }\n\n    expr = resolveItem(expr);\n\n    var resolvedPaths = [];\n\n    each(expr.paths, function (item) {\n        resolvedPaths.push(\n            item.type === ExprType.ACCESSOR\n                && item.paths[0].value === directive.index.paths[0].value\n            ? {\n                type: ExprType.NUMBER,\n                value: me.get(directive.index)\n            }\n            : resolveItem(item)\n        );\n    });\n\n    return createAccessor(resolvedPaths);\n};\n\n// 代理数据操作方法\ninherits(ForItemData, Data);\neach(\n    ['set', 'remove', 'unshift', 'shift', 'push', 'pop', 'splice'],\n    function (method) {\n        ForItemData.prototype['_' + method] = Data.prototype[method];\n        ForItemData.prototype[method] = function (expr) {\n            expr = this.exprResolve(parseExpr(expr));\n            dataCache.clear();\n            this.parent[method].apply(\n                this.parent,\n                [expr].concat(Array.prototype.slice.call(arguments, 1))\n            );\n        };\n    }\n);\n\n/**\n * 创建 for 指令元素的子元素\n *\n * @inner\n * @param {ForDirective} forElement for 指令元素对象\n * @param {*} item 子元素对应数据\n * @param {number} index 子元素对应序号\n * @return {Element}\n */\nfunction createForDirectiveChild(forElement, item, index) {\n    var itemScope = new ForItemData(forElement, item, index);\n    return createNode(forElement.itemANode, forElement, itemScope);\n}\n\n/**\n * for 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction ForNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.itemANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'for': 1\n        })\n    });\n\n    this.param = aNode.directives['for']; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var me = this;\n        each(\n            evalExpr(this.param.value, this.scope, this.owner),\n            function (item, i) {\n                var itemScope = new ForItemData(me, item, i);\n                var child = createReverseNode(me.itemANode, reverseWalker, me, itemScope);\n                me.children.push(child);\n            }\n        );\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\n\nForNode.prototype.nodeType = NodeType.FOR;\nForNode.prototype._create = nodeOwnCreateStump;\nForNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * 将元素attach到页面的行为\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nForNode.prototype.attach = function (parentEl, beforeEl) {\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n\n    // paint list\n    var el = this.el || parentEl.firstChild;\n    var data = evalExpr(this.param.value, this.scope, this.owner);\n    var len = data && data.length || 0;\n    for (var i = 0; i < len; i++) {\n        var child = createForDirectiveChild(this, data[i], i);\n        this.children.push(child);\n        child.attach(parentEl, el);\n    }\n};\n\n/**\n * 将元素从页面上移除的行为\n */\nForNode.prototype.detach = function () {\n    if (this.lifeCycle.attached) {\n        elementDisposeChildren(this);\n        this.children = [];\n        removeEl(this.el);\n        this.lifeCycle = LifeCycle.detached;\n    }\n};\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nForNode.prototype._update = function (changes) {\n\n    var me = this;\n    // 控制列表更新策略是否原样更新的变量\n    var originalUpdate = this.aNode.directives.transition;\n\n\n    var oldChildrenLen = this.children.length;\n    var childrenChanges = new Array(oldChildrenLen);\n\n    function pushToChildrenChanges(change) {\n        for (var i = 0, l = childrenChanges.length; i < l; i++) {\n            (childrenChanges[i] = childrenChanges[i] || []).push(change);\n        }\n    }\n\n    var disposeChildren = [];\n\n\n    // 判断列表是否父元素下唯一的元素\n    // 如果是的话，可以做一些更新优化\n    var parentEl = this.el.parentNode;\n    var parentFirstChild = parentEl.firstChild;\n    var parentLastChild = parentEl.lastChild;\n    var isOnlyParentChild = oldChildrenLen > 0 // 有孩子时\n            && parentFirstChild === this.children[0].el\n            && (parentLastChild === this.el || parentLastChild === this.children[oldChildrenLen - 1].el)\n        || oldChildrenLen === 0 // 无孩子时\n            && parentFirstChild === this.el\n            && parentLastChild === this.el;\n\n    // 控制列表是否整体更新的变量\n    var isChildrenRebuild;\n\n    var newList = evalExpr(this.param.value, this.scope, this.owner);\n    var newLen = newList && newList.length || 0;\n\n    /* eslint-disable no-redeclare */\n    for (var cIndex = 0, cLen = changes.length; cIndex < cLen; cIndex++) {\n        var change = changes[cIndex];\n        var relation = changeExprCompare(change.expr, this.param.value, this.scope);\n\n        if (!relation) {\n            // 无关时，直接传递给子元素更新，列表本身不需要动\n            pushToChildrenChanges(change);\n        }\n        else if (relation > 2) {\n            // 变更表达式是list绑定表达式的子项\n            // 只需要对相应的子项进行更新\n            var changePaths = change.expr.paths;\n            var forLen = this.param.value.paths.length;\n            var changeIndex = +evalExpr(changePaths[forLen], this.scope, this.owner);\n\n            if (isNaN(changeIndex)) {\n                pushToChildrenChanges(change);\n            }\n            else {\n                change = {\n                    type: change.type,\n                    expr: createAccessor(\n                        this.param.item.paths.concat(changePaths.slice(forLen + 1))\n                    ),\n                    value: change.value,\n                    index: change.index,\n                    deleteCount: change.deleteCount,\n                    insertions: change.insertions,\n                    option: change.option\n                };\n\n                (childrenChanges[changeIndex] = childrenChanges[changeIndex] || [])\n                    .push(change);\n\n                if (this.children[changeIndex]) {\n                    if (change.type === DataChangeType.SPLICE) {\n                        this.children[changeIndex].scope._splice(\n                            change.expr,\n                            [].concat(change.index, change.deleteCount, change.insertions),\n                            { silent: 1 }\n                        );\n                    }\n                    else {\n                        this.children[changeIndex].scope._set(\n                            change.expr,\n                            change.value,\n                            { silent: 1 }\n                        );\n                    }\n                }\n            }\n        }\n        else if (change.type !== DataChangeType.SPLICE) {\n            // 变更表达式是list绑定表达式本身或母项的重新设值\n            // 此时需要更新整个列表\n\n\n            // 老的比新的多的部分，标记需要dispose\n            if (oldChildrenLen > newLen) {\n                disposeChildren = disposeChildren.concat(this.children.slice(newLen));\n\n                childrenChanges = childrenChanges.slice(0, newLen);\n                this.children = this.children.slice(0, newLen);\n            }\n\n            // 整项变更\n            for (var i = 0; i < newLen; i++) {\n                (childrenChanges[i] = childrenChanges[i] || []).push({\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: createAccessor(this.param.item.paths.slice(0)),\n                    value: newList[i]\n                });\n\n                // 对list更上级数据的直接设置\n                if (relation < 2) {\n                    childrenChanges[i].push(change);\n                }\n\n                if (this.children[i]) {\n                    this.children[i].scope._set(\n                        this.param.item,\n                        newList[i],\n                        {silent: 1}\n                    );\n                }\n                else {\n                    this.children[i] = 0;\n                }\n            }\n\n            isChildrenRebuild = 1;\n        }\n        else if (relation === 2 && change.type === DataChangeType.SPLICE && !isChildrenRebuild) {\n            // 变更表达式是list绑定表达式本身数组的splice操作\n            // 此时需要删除部分项，创建部分项\n            var changeStart = change.index;\n            var deleteCount = change.deleteCount;\n            var insertionsLen = change.insertions.length;\n            var newCount = insertionsLen - deleteCount;\n\n            if (newCount) {\n                var indexChange = {\n                    type: DataChangeType.SET,\n                    option: change.option,\n                    expr: this.param.index\n                };\n\n                for (var i = changeStart + deleteCount; i < this.children.length; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push(indexChange);\n                    this.children[i] && this.children[i].scope._set(\n                        indexChange.expr,\n                        i - deleteCount + insertionsLen,\n                        {silent: 1}\n                    );\n                }\n            }\n\n            var deleteLen = deleteCount;\n            while (deleteLen--) {\n                if (deleteLen < insertionsLen) {\n                    var i = changeStart + deleteLen;\n                    // update\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: DataChangeType.SET,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: change.insertions[deleteLen]\n                    });\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            change.insertions[deleteLen],\n                            {silent: 1}\n                        );\n                    }\n                }\n            }\n\n            if (newCount < 0) {\n                disposeChildren = disposeChildren.concat(this.children.splice(changeStart + insertionsLen, -newCount));\n                childrenChanges.splice(changeStart + insertionsLen, -newCount);\n            }\n            else if (newCount > 0) {\n                var spliceArgs = [changeStart + deleteCount, 0].concat(new Array(newCount));\n                this.children.splice.apply(this.children, spliceArgs);\n                childrenChanges.splice.apply(childrenChanges, spliceArgs);\n            }\n        }\n    }\n\n    var newChildrenLen = this.children.length;\n\n    // 标记 length 是否发生变化\n    if (newChildrenLen !== oldChildrenLen) {\n        var lengthChange = {\n            type: DataChangeType.SET,\n            option: {},\n            expr: createAccessor(\n                this.param.value.paths.concat({\n                    type: ExprType.STRING,\n                    value: 'length'\n                })\n            )\n        };\n\n        if (changesIsInDataRef([lengthChange], this.aNode.hotspot.data)) {\n            pushToChildrenChanges(lengthChange);\n        }\n    }\n\n    // 清除应该干掉的 child\n    this._doCreateAndUpdate = doCreateAndUpdate;\n\n    // 这里不用getTransition，getTransition和scope相关，for和forItem的scope是不同的\n    // 所以getTransition结果本身也是不一致的。不如直接判断指令是否存在，如果存在就不进入暴力清除模式\n    // var violentClear = isOnlyParentChild && newChildrenLen === 0 && !elementGetTransition(me);\n    var violentClear = !originalUpdate && isOnlyParentChild && newChildrenLen === 0;\n\n    var disposedChildCount = 0;\n    for (var i = 0; i < disposeChildren.length; i++) {\n        var disposeChild = disposeChildren[i];\n        if (disposeChild) {\n            disposeChild._ondisposed = childDisposed;\n            disposeChild.dispose(violentClear, violentClear);\n        }\n        else {\n            childDisposed();\n        }\n    }\n\n    if (violentClear) {\n        // cloneNode + replaceChild is faster\n        // parentEl.innerHTML = '';\n        var replaceNode = parentEl.cloneNode(false);\n        parentEl.parentNode.replaceChild(replaceNode, parentEl);\n        this.el = document.createComment(this.id);\n        replaceNode.appendChild(this.el);\n    }\n\n    if (disposeChildren.length === 0) {\n        doCreateAndUpdate();\n    }\n\n\n    function childDisposed() {\n        disposedChildCount++;\n        if (disposedChildCount === disposeChildren.length\n            && doCreateAndUpdate === me._doCreateAndUpdate\n        ) {\n            doCreateAndUpdate();\n        }\n    }\n\n    function doCreateAndUpdate() {\n        me._doCreateAndUpdate = null;\n        if (violentClear) {\n            return;\n        }\n\n\n        var beforeEl = me.el;\n\n        // 对相应的项进行更新\n        if (oldChildrenLen === 0 && isOnlyParentChild) {\n            for (var i = 0; i < newChildrenLen; i++) {\n                me.children[i] = createForDirectiveChild(me, newList[i], i);\n                me.children[i].attach(parentEl, beforeEl);\n            }\n        }\n        else {\n            // 如果不attached则直接创建，如果存在则调用更新函数\n            var j = -1;\n            for (var i = 0; i < newChildrenLen; i++) {\n                var child = me.children[i];\n\n                if (child) {\n                    childrenChanges[i] && child._update(childrenChanges[i]);\n                }\n                else {\n                    if (j < i) {\n                        j = i + 1;\n                        beforeEl = null;\n                        while (j < newChildrenLen) {\n                            var nextChild = me.children[j];\n                            if (nextChild) {\n                                beforeEl = nextChild.sel || nextChild.el;\n                                break;\n                            }\n                            j++;\n                        }\n                    }\n\n                    me.children[i] = createForDirectiveChild(me, newList[i], i);\n                    me.children[i].attach(parentEl, beforeEl || me.el);\n                }\n            }\n        }\n    }\n};\n\n\n// exports = module.exports = ForNode;\n\n\n/**\n * @file 清洗条件 aNode\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n\n\n/**\n * 清洗条件 aNode，返回纯净无条件指令的 aNode\n *\n * @param {ANode} aNode 条件节点对象\n * @return {ANode}\n */\nfunction rinseCondANode(aNode) {\n    var clearANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'if': 1,\n            'else': 1,\n            'elif': 1\n        })\n    });\n\n    return clearANode;\n}\n\n// exports = module.exports = rinseCondANode;\n\n\n/**\n * @file if 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n\n/**\n * if 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction IfNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.cond = this.aNode.directives['if'].value; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        if (evalExpr(this.cond, this.scope, this.owner)) {\n            this.elseIndex = -1;\n            this.children[0] = createReverseNode(\n                rinseCondANode(aNode),\n                reverseWalker,\n                this\n            );\n        }\n        else {\n            var me = this;\n            each(aNode.elses, function (elseANode, index) {\n                var elif = elseANode.directives.elif;\n\n                if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                    me.elseIndex = index;\n                    me.children[0] = createReverseNode(\n                        rinseCondANode(elseANode),\n                        reverseWalker,\n                        me\n                    );\n                    return false;\n                }\n            });\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\nIfNode.prototype.nodeType = NodeType.IF;\n\nIfNode.prototype._create = nodeOwnCreateStump;\nIfNode.prototype.dispose = nodeOwnSimpleDispose;\n\nIfNode.prototype.attach = function (parentEl, beforeEl) {\n    var me = this;\n    var elseIndex;\n    var child;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        child = createNode(rinseCondANode(me.aNode), me);\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                child = createNode(rinseCondANode(elseANode), me);\n                elseIndex = index;\n                return false;\n            }\n        });\n    }\n\n    if (child) {\n        me.children[0] = child;\n        child.attach(parentEl, beforeEl);\n        me.elseIndex = elseIndex;\n    }\n\n\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nIfNode.prototype._update = function (changes) {\n    var me = this;\n    var childANode = me.aNode;\n    var elseIndex;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        elseIndex = -1;\n    }\n    else {\n        each(me.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (elif && evalExpr(elif.value, me.scope, me.owner) || !elif) {\n                elseIndex = index;\n                childANode = elseANode;\n                return false;\n            }\n        });\n    }\n\n    if (elseIndex === me.elseIndex) {\n        elementUpdateChildren(me, changes);\n    }\n    else {\n        var child = me.children[0];\n        me.children = [];\n        if (child) {\n            child._ondisposed = newChild;\n            child.dispose();\n        }\n        else {\n            newChild();\n        }\n\n        me.elseIndex = elseIndex;\n    }\n\n    function newChild() {\n        if (typeof elseIndex !== 'undefined') {\n            var child = createNode(rinseCondANode(childANode), me);\n            // var parentEl = getNodeStumpParent(me);\n            child.attach(me.el.parentNode, me.el);\n\n            me.children[0] = child;\n        }\n    }\n};\n\n// exports = module.exports = IfNode;\n\n\n/**\n * @file template 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n/**\n * template 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TemplateNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === NodeType.CMPT\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        var me = this;\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\n\n\nTemplateNode.prototype.nodeType = NodeType.TPL;\n\nTemplateNode.prototype.attach = nodeOwnOnlyChildrenAttach;\n\n/**\n * 销毁释放\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nTemplateNode.prototype.dispose = function (noDetach, noTransition) {\n    elementDisposeChildren(this, noDetach, noTransition);\n    nodeDispose(this);\n};\n\n\nTemplateNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nTemplateNode.prototype._update = function (changes) {\n    elementUpdateChildren(this, changes);\n};\n\n// exports = module.exports = TemplateNode;\n\n\n/**\n * @file 对元素的子节点进行反解\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var DOMChildrenWalker = require('./dom-children-walker');\n// var createReverseNode = require('./create-reverse-node');\n\n// #[begin] reverse\n\n/**\n * 对元素的子节点进行反解\n *\n * @param {Object} element 元素\n */\nfunction reverseElementChildren(element) {\n    var htmlDirective = element.aNode.directives.html;\n\n    if (!htmlDirective) {\n        var reverseWalker = new DOMChildrenWalker(element.el);\n\n        each(element.aNode.children, function (aNodeChild) {\n            element.children.push(createReverseNode(aNodeChild, reverseWalker, element));\n        });\n    }\n}\n// #[end]\n\n// exports = module.exports = reverseElementChildren;\n\n\n/**\n * @file 处理元素的属性操作\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var getPropHandler = require('./get-prop-handler');\n\n/**\n * 处理元素属性操作\n *\n * @param {Object} element 元素对象\n * @param {*} value 属性值\n * @param {Object} prop 属性信息对象\n */\nfunction handleProp(element, value, prop) {\n    var name = prop.name;\n    getPropHandler(element.tagName, name).prop(element.el, value, name, element, prop);\n}\n\n// exports = module.exports = handleProp;\n\n\n/**\n * @file 创建节点对应的 HTMLElement 主元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n// var createEl = require('../browser/create-el');\n// var handleProp = require('./handle-prop');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n\nvar emptyPropWhenCreate = {\n    'class': 1,\n    'style': 1,\n    'id': 1\n};\n\n/**\n * 创建节点对应的 HTMLElement 主元素\n */\nfunction elementOwnCreate() {\n    if (!this.lifeCycle.created) {\n        this.lifeCycle = LifeCycle.painting;\n\n        var isComponent = this.nodeType === NodeType.CMPT;\n        var sourceNode = this.aNode.hotspot.sourceNode;\n        var props = this.aNode.props;\n\n        if (sourceNode) {\n            this.el = sourceNode.cloneNode();\n            props = this.aNode.hotspot.dynamicProps;\n        }\n        else {\n            this.el = createEl(this.tagName);\n        }\n\n        for (var i = 0, l = props.length; i < l; i++) {\n            var prop = props[i];\n            var value = isComponent\n                ? evalExpr(prop.expr, this.data, this)\n                : evalExpr(prop.expr, this.scope, this.owner);\n\n            if (value || !emptyPropWhenCreate[prop.name]) {\n                handleProp(this, value, prop);\n            }\n        }\n\n        this._toPhase('created');\n    }\n}\n\n// exports = module.exports = elementOwnCreate;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n// var evalExpr = require('../runtime/eval-expr');\n// var insertBefore = require('../browser/insert-before');\n\n/**\n * 将元素attach到页面\n *\n * @param {Object} element 元素节点\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementAttach(element, parentEl, beforeEl) {\n    element._create();\n    insertBefore(element.el, parentEl, beforeEl);\n\n    if (!element._contentReady) {\n        var htmlDirective = element.aNode.directives.html;\n\n        if (htmlDirective) {\n            element.el.innerHTML = evalExpr(htmlDirective.value, element.scope, element.owner);\n        }\n        else {\n            var aNodeChildren = element.aNode.children;\n            for (var i = 0; i < aNodeChildren.length; i++) {\n                var child = createNode(aNodeChildren[i], element);\n                element.children.push(child);\n                child.attach(element.el);\n            }\n        }\n\n        element._contentReady = 1;\n    }\n}\n\n\n// exports = module.exports = elementAttach;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var elementAttach = require('./element-attach');\n\n/**\n * 将元素attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementOwnAttach(parentEl, beforeEl) {\n    if (!this.lifeCycle.attached) {\n        elementAttach(this, parentEl, beforeEl);\n        this._attached();\n    }\n}\n\n// exports = module.exports = elementOwnAttach;\n\n\n/**\n * @file 获取 element 的 transition 控制对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var NodeType = require('./node-type');\n\n/**\n * 获取 element 的 transition 控制对象\n *\n * @param {Object} element 元素\n * @return {Object?}\n */\nfunction elementGetTransition(element) {\n    var aNode = element.nodeType === NodeType.CMPT ? element.givenANode : element.aNode;\n    var directive = aNode && aNode.directives.transition;\n    var owner = element.owner;\n\n    var transition;\n    if (directive && owner) {\n        transition = findMethod(owner, directive.value.name);\n\n        if (typeof transition === 'function') {\n            transition = transition.apply(\n                owner,\n                evalArgs(directive.value.args, element.scope, owner)\n            );\n        }\n    }\n\n    return transition || element.transition;\n}\n\n// exports = module.exports = elementGetTransition;\n\n\n/**\n * @file 元素节点执行leave行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementGetTransition = require('./element-get-transition');\n\n\n/**\n * 元素节点执行leave行为\n *\n * @param {Object} element 元素\n */\nfunction elementLeave(element) {\n    var lifeCycle = element.lifeCycle;\n    if (lifeCycle.leaving) {\n        return;\n    }\n\n    if (element.disposeNoTransition) {\n        element._doneLeave();\n    }\n    else {\n        var transition = elementGetTransition(element);\n\n        if (transition && transition.leave) {\n            element._toPhase('leaving');\n            transition.leave(element.el, function () {\n                element._doneLeave();\n            });\n        }\n        else {\n            element._doneLeave();\n        }\n    }\n}\n\n// exports = module.exports = elementLeave;\n\n\n/**\n * @file 将元素从页面上移除\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 将元素从页面上移除\n */\nfunction elementOwnDetach() {\n    elementLeave(this);\n}\n\n\n// exports = module.exports = elementOwnDetach;\n\n\n/**\n * @file 销毁释放元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 销毁释放元素\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementOwnDispose(noDetach, noTransition) {\n    this.leaveDispose = 1;\n    this.disposeNoDetach = noDetach;\n    this.disposeNoTransition = noTransition;\n\n    elementLeave(this);\n}\n\n// exports = module.exports = elementOwnDispose;\n\n\n/**\n * @file 为元素的 el 绑定事件\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var on = require('../browser/on');\n\n/**\n * 为元素的 el 绑定事件\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {boolean} capture 是否是捕获阶段触发\n */\nfunction elementOwnOnEl(name, listener, capture) {\n    if (typeof listener === 'function') {\n        capture = !!capture;\n        this._elFns.push([name, listener, capture]);\n        on(this.el, name, listener, capture);\n    }\n}\n\n// exports = module.exports = elementOwnOnEl;\n\n\n/**\n * @file  事件绑定不存在的 warning\n * @author varsha(wangshuonpu@gmail.com)\n */\n\n// var each = require('../util/each');\n\n// #[begin] error\n/**\n * 事件绑定不存在的 warning\n *\n * @param {Object} eventBind 事件绑定对象\n * @param {Component} owner 所属的组件对象\n */\nfunction warnEventListenMethod(eventBind, owner) {\n    var valid = true;\n    var method = owner;\n    each(eventBind.expr.name.paths, function (path) {\n        if (!path.value) {\n            return false;\n        }\n\n        method = method[path.value];\n        valid = !!method;\n        return valid;\n    });\n\n    if (!valid) {\n        var paths = [];\n        each(eventBind.expr.name.paths, function (path) {\n            paths.push(path.value);\n        });\n        var message = '[SAN WARNING] ' + eventBind.name + ' listen fail,\"' + paths.join('.') + '\" not exist';\n\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnEventListenMethod;\n\n\n/**\n * @file 完成元素 attached 后的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var bind = require('../util/bind');\n// var empty = require('../util/empty');\n// var isBrowser = require('../browser/is-browser');\n// var trigger = require('../browser/trigger');\n// var NodeType = require('./node-type');\n// var elementGetTransition = require('./element-get-transition');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var getPropHandler = require('./get-prop-handler');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n\n/**\n * 双绑输入框CompositionEnd事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionEnd() {\n    if (!this.composing) {\n        return;\n    }\n\n    this.composing = 0;\n\n    trigger(this, 'input');\n}\n\n/**\n * 双绑输入框CompositionStart事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionStart() {\n    this.composing = 1;\n}\n\nfunction xPropOutputer(xProp, data) {\n    getPropHandler(this.tagName, xProp.name).output(this, xProp, data);\n}\n\nfunction inputXPropOutputer(element, xProp, data) {\n    var outputer = bind(xPropOutputer, element, xProp, data);\n    return function (e) {\n        if (!this.composing) {\n            outputer(e);\n        }\n    };\n}\n\n/**\n * 完成元素 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nfunction elementOwnAttached() {\n    this._toPhase('created');\n\n    var isComponent = this.nodeType === NodeType.CMPT;\n    var data = isComponent ? this.data : this.scope;\n\n    /* eslint-disable no-redeclare */\n\n    // 处理自身变化时双向绑定的逻辑\n    var xProps = this.aNode.hotspot.xProps;\n    for (var i = 0, l = xProps.length; i < l; i++) {\n        var xProp = xProps[i];\n\n        switch (xProp.name) {\n            case 'value':\n                switch (this.tagName) {\n                    case 'input':\n                    case 'textarea':\n                        if (isBrowser && window.CompositionEvent) {\n                            this._onEl('change', inputOnCompositionEnd);\n                            this._onEl('compositionstart', inputOnCompositionStart);\n                            this._onEl('compositionend', inputOnCompositionEnd);\n                        }\n\n                        this._onEl(\n                            ('oninput' in this.el) ? 'input' : 'propertychange',\n                            inputXPropOutputer(this, xProp, data)\n                        );\n\n                        break;\n\n                    case 'select':\n                        this._onEl('change', bind(xPropOutputer, this, xProp, data));\n                        break;\n                }\n                break;\n\n            case 'checked':\n                switch (this.tagName) {\n                    case 'input':\n                        switch (this.el.type) {\n                            case 'checkbox':\n                            case 'radio':\n                                this._onEl('click', bind(xPropOutputer, this, xProp, data));\n                        }\n                }\n                break;\n        }\n    }\n\n    // bind events\n    var events = isComponent\n        ? this.aNode.events.concat(this.nativeEvents)\n        : this.aNode.events;\n\n    for (var i = 0, l = events.length; i < l; i++) {\n        var eventBind = events[i];\n        var owner = isComponent ? this : this.owner;\n\n        // 判断是否是nativeEvent，下面的warn方法和事件绑定都需要\n        // 依此指定eventBind.expr.name位于owner还是owner.owner上\n        if (eventBind.modifier.native) {\n            owner = owner.owner;\n            data = this.scope || owner.data;\n        }\n\n        // #[begin] error\n        warnEventListenMethod(eventBind, owner);\n        // #[end]\n\n        this._onEl(\n            eventBind.name,\n            bind(\n                eventDeclarationListener,\n                owner,\n                eventBind,\n                0,\n                data\n            ),\n            eventBind.modifier.capture\n        );\n    }\n\n    this._toPhase('attached');\n\n\n    if (this._isInitFromEl) {\n        this._isInitFromEl = false;\n    }\n    else {\n        var transition = elementGetTransition(this);\n        if (transition && transition.enter) {\n            transition.enter(this.el, empty);\n        }\n    }\n}\n\n// exports = module.exports = elementOwnAttached;\n\n\n/**\n * @file 销毁元素节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var un = require('../browser/un');\n// var removeEl = require('../browser/remove-el');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var nodeDispose = require('./node-dispose');\n\n/**\n * 销毁元素节点\n *\n * @param {Object} element 要销毁的元素节点\n * @param {Object=} options 销毁行为的参数\n */\nfunction elementDispose(element) {\n    elementDisposeChildren(element, 1, 1);\n\n    // el 事件解绑\n    var len = element._elFns.length;\n    while (len--) {\n        var fn = element._elFns[len];\n        un(element.el, fn[0], fn[1], fn[2]);\n    }\n    element._elFns = null;\n\n\n    // 如果没有parent，说明是一个root component，一定要从dom树中remove\n    if (!element.disposeNoDetach || !element.parent) {\n        removeEl(element.el);\n    }\n\n    if (element._toPhase) {\n        element._toPhase('detached');\n    }\n\n    nodeDispose(element);\n}\n\n\n// exports = module.exports = elementDispose;\n\n\n/**\n * @file 初始化 element 节点的 tagName 处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ieOldThan9 = require('../browser/ie-old-than-9');\n\n/**\n * 初始化 element 节点的 tagName 处理\n *\n * @param {Object} node 节点对象\n */\nfunction elementInitTagName(node) {\n    node.tagName = node.tagName || node.aNode.tagName || 'div';\n\n    // #[begin] allua\n    // ie8- 不支持innerHTML输出自定义标签\n    if (ieOldThan9 && node.tagName.indexOf('-') > 0) {\n        node.tagName = 'div';\n    }\n    // #[end]\n}\n\n\n// exports = module.exports = elementInitTagName;\n\n\n/**\n * @file 给 devtool 发通知消息\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n\n// #[begin] devtool\nvar san4devtool;\n\n/**\n * 给 devtool 发通知消息\n *\n * @param {string} name 消息名称\n * @param {*} arg 消息参数\n */\nfunction emitDevtool(name, arg) {\n    if (isBrowser && san4devtool && san4devtool.debug && window.__san_devtool__) {\n        window.__san_devtool__.emit(name, arg);\n    }\n}\n\nemitDevtool.start = function (main) {\n    san4devtool = main;\n    emitDevtool('san', main);\n};\n// #[end]\n\n// exports = module.exports = emitDevtool;\n\n\n/**\n * @file 组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var bind = require('../util/bind');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var nextTick = require('../util/next-tick');\n// var emitDevtool = require('../util/emit-devtool');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var postProp = require('../parser/post-prop');\n// var removeEl = require('../browser/remove-el');\n// var Data = require('../runtime/data');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var compileComponent = require('./compile-component');\n// var componentPreheat = require('./component-preheat');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var reverseElementChildren = require('./reverse-element-children');\n// var camelComponentBinds = require('./camel-component-binds');\n// var NodeType = require('./node-type');\n// var elementInitTagName = require('./element-init-tag-name');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementAttach = require('./element-attach');\n// var handleProp = require('./handle-prop');\n// var createDataTypesChecker = require('../util/create-data-types-checker');\n\n\n\n/**\n * 组件类\n *\n * @class\n * @param {Object} options 初始化参数\n */\nfunction Component(options) { // eslint-disable-line\n    options = options || {};\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.listeners = {};\n    this.slotChildren = [];\n\n    var clazz = this.constructor;\n\n    this.filters = this.filters || clazz.filters || {};\n    this.computed = this.computed || clazz.computed || {};\n    this.messages = this.messages || clazz.messages || {};\n    this.subTag = options.subTag;\n\n    // compile\n    compileComponent(clazz);\n    componentPreheat(clazz);\n\n    var me = this;\n    var protoANode = clazz.prototype.aNode;\n\n    me.givenANode = options.aNode;\n    me.givenNamedSlotBinds = [];\n    me.givenSlots = {\n        named: {}\n    };\n\n    this.owner = options.owner;\n    this.scope = options.scope;\n    this.el = options.el;\n\n    var parent = options.parent;\n    if (parent) {\n        this.parent = parent;\n        this.parentComponent = parent.nodeType === NodeType.CMPT\n            ? parent\n            : parent && parent.parentComponent;\n    }\n\n    this.id = guid();\n\n    // #[begin] reverse\n    if (this.el) {\n        var firstCommentNode = this.el.firstChild;\n        if (firstCommentNode.nodeType === 3) {\n            firstCommentNode = firstCommentNode.nextSibling;\n        }\n\n        if (firstCommentNode && firstCommentNode.nodeType === 8) {\n            var stumpMatch = firstCommentNode.data.match(/^\\s*s-data:([\\s\\S]+)?$/);\n            if (stumpMatch) {\n                var stumpText = stumpMatch[1];\n\n                // fill component data\n                options.data = (new Function(\n                    'return ' + stumpText.replace(/^[\\s\\n]*/, '')\n                ))();\n\n                if (firstCommentNode.previousSibling) {\n                    removeEl(firstCommentNode.previousSibling);\n                }\n                removeEl(firstCommentNode);\n            }\n        }\n    }\n    // #[end]\n\n    // native事件数组\n    this.nativeEvents = [];\n\n    if (this.givenANode) {\n        // 组件运行时传入的结构，做slot解析\n        this._createGivenSlots();\n\n        each(this.givenANode.events, function (eventBind) {\n            // 保存当前实例的native事件，下面创建aNode时候做合并\n            if (eventBind.modifier.native) {\n                me.nativeEvents.push(eventBind);\n                return;\n            }\n\n            // #[begin] error\n            warnEventListenMethod(eventBind, options.owner);\n            // #[end]\n\n            me.on(\n                eventBind.name,\n                bind(eventDeclarationListener, options.owner, eventBind, 1, options.scope),\n                eventBind\n            );\n        });\n\n        this.tagName = protoANode.tagName || me.givenANode.tagName;\n        this.binds = camelComponentBinds(this.givenANode.props);\n    }\n\n    this._toPhase('compiled');\n\n    // init data\n    this.data = new Data(\n        extend(\n            typeof this.initData === 'function' && this.initData() || {},\n            options.data\n        )\n    );\n\n    elementInitTagName(this);\n\n    each(this.binds, function (bind) {\n        postProp(bind);\n\n        if (me.scope) {\n            var value = evalExpr(bind.expr, me.scope, me.owner);\n            if (typeof value !== 'undefined') {\n                // See: https://github.com/ecomfe/san/issues/191\n                me.data.set(bind.name, value);\n            }\n        }\n    });\n\n    // #[begin] error\n    // 在初始化 + 数据绑定后，开始数据校验\n    // NOTE: 只在开发版本中进行属性校验\n    var dataTypes = this.dataTypes || clazz.dataTypes;\n    if (dataTypes) {\n        var dataTypeChecker = createDataTypesChecker(\n            dataTypes,\n            this.subTag || this.name || clazz.name\n        );\n        this.data.setTypeChecker(dataTypeChecker);\n        this.data.checkDataTypes();\n    }\n    // #[end]\n\n    this.computedDeps = {};\n    /* eslint-disable guard-for-in */\n    for (var expr in this.computed) {\n        if (!this.computedDeps[expr]) {\n            this._calcComputed(expr);\n        }\n    }\n    /* eslint-enable guard-for-in */\n\n    if (!this.dataChanger) {\n        this.dataChanger = bind(this._dataChanger, this);\n        this.data.listen(this.dataChanger);\n    }\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (this.el) {\n        reverseElementChildren(this);\n        this._attached();\n    }\n\n    var walker = options.reverseWalker;\n    if (walker) {\n        var currentNode = walker.current;\n        if (currentNode && currentNode.nodeType === 1) {\n            this.el = currentNode;\n            walker.goNext();\n        }\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nComponent.prototype.getComponentType = function (aNode) {\n    return this.components[aNode.tagName];\n};\n\n/**\n * 初始化创建组件外部传入的插槽对象\n *\n * @protected\n */\nComponent.prototype._createGivenSlots = function () {\n    var me = this;\n    me.givenSlots.named = {};\n\n    // 组件运行时传入的结构，做slot解析\n    me.givenANode && me.scope && each(me.givenANode.children, function (child) {\n        var target;\n\n        var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n        if (slotBind) {\n            !me.givenSlotInited && me.givenNamedSlotBinds.push(slotBind);\n\n            var slotName = evalExpr(slotBind.expr, me.scope, me.owner);\n            target = me.givenSlots.named[slotName];\n            if (!target) {\n                target = me.givenSlots.named[slotName] = [];\n            }\n        }\n        else if (!me.givenSlotInited) {\n            target = me.givenSlots.noname;\n            if (!target) {\n                target = me.givenSlots.noname = [];\n            }\n        }\n\n        target && target.push(child);\n    });\n\n    me.givenSlotInited = true;\n};\n\n/**\n * 类型标识\n *\n * @type {string}\n */\nComponent.prototype.nodeType = NodeType.CMPT;\n\n/**\n * 在下一个更新周期运行函数\n *\n * @param {Function} fn 要运行的函数\n */\nComponent.prototype.nextTick = nextTick;\n\n/* eslint-disable operator-linebreak */\n/**\n * 使节点到达相应的生命周期\n *\n * @protected\n * @param {string} name 生命周期名称\n */\nComponent.prototype._callHook =\nComponent.prototype._toPhase = function (name) {\n    if (!this.lifeCycle[name]) {\n        this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n        if (typeof this[name] === 'function') {\n            this[name]();\n        }\n\n        // 通知devtool\n        // #[begin] devtool\n        emitDevtool('comp-' + name, this);\n        // #[end]\n    }\n};\n/* eslint-enable operator-linebreak */\n\n\n/**\n * 添加事件监听器\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {string?} declaration 声明式\n */\nComponent.prototype.on = function (name, listener, declaration) {\n    if (typeof listener === 'function') {\n        if (!this.listeners[name]) {\n            this.listeners[name] = [];\n        }\n        this.listeners[name].push({fn: listener, declaration: declaration});\n    }\n};\n\n/**\n * 移除事件监听器\n *\n * @param {string} name 事件名\n * @param {Function=} listener 监听器\n */\nComponent.prototype.un = function (name, listener) {\n    var nameListeners = this.listeners[name];\n    var len = nameListeners && nameListeners.length;\n\n    while (len--) {\n        if (!listener || listener === nameListeners[len].fn) {\n            nameListeners.splice(len, 1);\n        }\n    }\n};\n\n\n/**\n * 派发事件\n *\n * @param {string} name 事件名\n * @param {Object} event 事件对象\n */\nComponent.prototype.fire = function (name, event) {\n    var me = this;\n    each(this.listeners[name], function (listener) {\n        listener.fn.call(me, event);\n    });\n};\n\n/**\n * 计算 computed 属性的值\n *\n * @private\n * @param {string} computedExpr computed表达式串\n */\nComponent.prototype._calcComputed = function (computedExpr) {\n    var computedDeps = this.computedDeps[computedExpr];\n    if (!computedDeps) {\n        computedDeps = this.computedDeps[computedExpr] = {};\n    }\n\n    this.data.set(computedExpr, this.computed[computedExpr].call({\n        data: {\n            get: bind(function (expr) {\n                // #[begin] error\n                if (!expr) {\n                    throw new Error('[SAN ERROR] call get method in computed need argument');\n                }\n                // #[end]\n\n                if (!computedDeps[expr]) {\n                    computedDeps[expr] = 1;\n\n                    if (this.computed[expr]) {\n                        this._calcComputed(expr);\n                    }\n\n                    this.watch(expr, function () {\n                        this._calcComputed(computedExpr);\n                    });\n                }\n\n                return this.data.get(expr);\n            }, this)\n        }\n    }));\n};\n\n/**\n * 派发消息\n * 组件可以派发消息，消息将沿着组件树向上传递，直到遇上第一个处理消息的组件\n *\n * @param {string} name 消息名称\n * @param {*?} value 消息值\n */\nComponent.prototype.dispatch = function (name, value) {\n    var parentComponent = this.parentComponent;\n\n    while (parentComponent) {\n        var receiver = parentComponent.messages[name] || parentComponent.messages['*'];\n        if (typeof receiver === 'function') {\n            receiver.call(\n                parentComponent,\n                {target: this, value: value, name: name}\n            );\n            break;\n        }\n\n        parentComponent = parentComponent.parentComponent;\n    }\n};\n\n/**\n * 获取组件内部的 slot\n *\n * @param {string=} name slot名称，空为default slot\n * @return {Array}\n */\nComponent.prototype.slot = function (name) {\n    var result = [];\n    var me = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            if (child.nodeType === NodeType.SLOT && child.owner === me) {\n                if (child.isNamed && child.name === name\n                    || !child.isNamed && !name\n                ) {\n                    result.push(child);\n                }\n            }\n            else {\n                childrenTraversal(child.children);\n            }\n        });\n    }\n\n    childrenTraversal(this.children);\n    return result;\n};\n\n/**\n * 获取带有 san-ref 指令的子组件引用\n *\n * @param {string} name 子组件的引用名\n * @return {Component}\n */\nComponent.prototype.ref = function (name) {\n    var refTarget;\n    var owner = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            elementTraversal(child);\n            return !refTarget;\n        });\n    }\n\n    function elementTraversal(element) {\n        var nodeType = element.nodeType;\n        if (nodeType === NodeType.TEXT) {\n            return;\n        }\n\n        if (element.owner === owner) {\n            var ref;\n            switch (element.nodeType) {\n                case NodeType.ELEM:\n                    ref = element.aNode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element.el;\n                    }\n                    break;\n\n                case NodeType.CMPT:\n                    ref = element.givenANode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element;\n                    }\n            }\n\n            !refTarget && childrenTraversal(element.slotChildren);\n        }\n\n        !refTarget && childrenTraversal(element.children);\n    }\n\n    childrenTraversal(this.children);\n\n    return refTarget;\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array?} changes 数据变化信息\n */\nComponent.prototype._update = function (changes) {\n    if (this.lifeCycle.disposed) {\n        return;\n    }\n\n    var me = this;\n\n\n    var needReloadForSlot = false;\n    this._notifyNeedReload = function () {\n        needReloadForSlot = true;\n    };\n\n    if (changes) {\n        each(changes, function (change) {\n            var changeExpr = change.expr;\n\n            each(me.binds, function (bindItem) {\n                var relation;\n                var setExpr = bindItem.name;\n                var updateExpr = bindItem.expr;\n\n                if (!isDataChangeByElement(change, me, setExpr)\n                    && (relation = changeExprCompare(changeExpr, updateExpr, me.scope))\n                ) {\n                    if (relation > 2) {\n                        setExpr = createAccessor(\n                            [\n                                {\n                                    type: ExprType.STRING,\n                                    value: setExpr\n                                }\n                            ].concat(changeExpr.paths.slice(updateExpr.paths.length))\n                        );\n\n                        updateExpr = changeExpr;\n                    }\n\n                    me.data.set(setExpr, evalExpr(updateExpr, me.scope, me.owner), {\n                        target: {\n                            id: me.owner.id\n                        }\n                    });\n                }\n            });\n\n            each(me.givenNamedSlotBinds, function (bindItem) {\n                needReloadForSlot = needReloadForSlot || changeExprCompare(changeExpr, bindItem.expr, me.scope);\n                return !needReloadForSlot;\n            });\n        });\n\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n        else {\n            var slotChildrenLen = this.slotChildren.length;\n            while (slotChildrenLen--) {\n                var slotChild = this.slotChildren[slotChildrenLen];\n\n                if (slotChild.lifeCycle.disposed) {\n                    this.slotChildren.splice(slotChildrenLen, 1);\n                }\n                else if (slotChild.isInserted) {\n                    slotChild._update(changes, 1);\n                }\n            }\n        }\n    }\n\n    var dataChanges = this.dataChanges;\n    if (dataChanges) {\n        this.dataChanges = null;\n        each(this.aNode.hotspot.dynamicProps, function (prop) {\n            each(dataChanges, function (change) {\n                if (changeExprCompare(change.expr, prop.expr, me.data)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, me.data)\n                ) {\n                    handleProp(me, evalExpr(prop.expr, me.data, me), prop);\n                    return false;\n                }\n            });\n        });\n\n        elementUpdateChildren(this, dataChanges);\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n\n        this._toPhase('updated');\n\n        if (this.owner) {\n            this._updateBindxOwner(dataChanges);\n            this.owner._update();\n        }\n    }\n\n    this._notifyNeedReload = null;\n};\n\nComponent.prototype._updateBindxOwner = function (dataChanges) {\n    var me = this;\n\n    if (this.owner) {\n        each(dataChanges, function (change) {\n            each(me.binds, function (bindItem) {\n                var changeExpr = change.expr;\n                if (bindItem.x\n                    && !isDataChangeByElement(change, me.owner)\n                    && changeExprCompare(changeExpr, parseExpr(bindItem.name), me.data)\n                ) {\n                    var updateScopeExpr = bindItem.expr;\n                    if (changeExpr.paths.length > 1) {\n                        updateScopeExpr = createAccessor(\n                            bindItem.expr.paths.concat(changeExpr.paths.slice(1))\n                        );\n                    }\n\n                    me.scope.set(\n                        updateScopeExpr,\n                        evalExpr(changeExpr, me.data, me),\n                        {\n                            target: {\n                                id: me.id,\n                                prop: bindItem.name\n                            }\n                        }\n                    );\n                }\n            });\n        });\n    }\n};\n\n/**\n * 重新绘制组件的内容\n * 当 dynamic slot name 发生变更或 slot 匹配发生变化时，重新绘制\n * 在组件级别重绘有点粗暴，但是能保证视图结果正确性\n */\nComponent.prototype._repaintChildren = function () {\n    elementDisposeChildren(this, 0, 1);\n    this.children = [];\n\n    this._contentReady = 0;\n    this.slotChildren = [];\n    elementAttach(this);\n};\n\n\n/**\n * 组件内部监听数据变化的函数\n *\n * @private\n * @param {Object} change 数据变化信息\n */\nComponent.prototype._dataChanger = function (change) {\n    if (this.lifeCycle.painting || this.lifeCycle.created) {\n        if (!this.dataChanges) {\n            nextTick(this._update, this);\n            this.dataChanges = [];\n        }\n\n        this.dataChanges.push(change);\n    }\n    else if (this.lifeCycle.inited && this.owner) {\n        this._updateBindxOwner([change]);\n    }\n};\n\n\n/**\n * 监听组件的数据变化\n *\n * @param {string} dataName 变化的数据项\n * @param {Function} listener 监听函数\n */\nComponent.prototype.watch = function (dataName, listener) {\n    var dataExpr = parseExpr(dataName);\n\n    this.data.listen(bind(function (change) {\n        if (changeExprCompare(change.expr, dataExpr, this.data)) {\n            listener.call(this, evalExpr(dataExpr, this.data, this), change);\n        }\n    }, this));\n};\n\n/**\n * 组件销毁的行为\n *\n * @param {Object} options 销毁行为的参数\n */\nComponent.prototype.dispose = elementOwnDispose;\n\nComponent.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            // 这里不用挨个调用 dispose 了，因为 children 释放链会调用的\n            this.slotChildren = null;\n\n            this.data.unlisten();\n            this.dataChanger = null;\n            this.dataChanges = null;\n\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n            this.listeners = null;\n\n            this.givenANode = null;\n            this.givenSlots = null;\n            this.givenNamedSlotBinds = null;\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 完成组件 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nComponent.prototype._attached = elementOwnAttached;\n\nComponent.prototype.attach = elementOwnAttach;\nComponent.prototype.detach = elementOwnDetach;\nComponent.prototype._create = elementOwnCreate;\nComponent.prototype._onEl = elementOwnOnEl;\n\n\n// exports = module.exports = Component;\n\n\n/**\n * @file 创建组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Component = require('./component');\n// var inherits = require('../util/inherits');\n\n/**\n * 创建组件类\n *\n * @param {Object} proto 组件类的方法表\n * @return {Function}\n */\nfunction defineComponent(proto) {\n    // 如果传入一个不是 san component 的 constructor，直接返回不是组件构造函数\n    // 这种场景导致的错误 san 不予考虑\n    if (typeof proto === 'function') {\n        return proto;\n    }\n\n    // #[begin] error\n    if (typeof proto !== 'object') {\n        throw new Error('[SAN FATAL] param must be a plain object.');\n    }\n    // #[end]\n\n    function ComponentClass(option) { // eslint-disable-line\n        Component.call(this, option);\n    }\n\n    ComponentClass.prototype = proto;\n    inherits(ComponentClass, Component);\n\n    return ComponentClass;\n}\n\n// exports = module.exports = defineComponent;\n\n\n/**\n * @file 编译组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var parseTemplate = require('../parser/parse-template');\n// var parseText = require('../parser/parse-text');\n// var defineComponent = require('./define-component');\n\n\n/**\n * 编译组件类。预解析template和components\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction compileComponent(ComponentClass) {\n    var proto = ComponentClass.prototype;\n\n    // pre define components class\n    if (!proto.hasOwnProperty('_cmptReady')) {\n        proto.components = ComponentClass.components || proto.components || {};\n        var components = proto.components;\n\n        for (var key in components) { // eslint-disable-line\n            var componentClass = components[key];\n\n            if (typeof componentClass === 'object') {\n                components[key] = defineComponent(componentClass);\n            }\n            else if (componentClass === 'self') {\n                components[key] = ComponentClass;\n            }\n        }\n\n        proto._cmptReady = 1;\n    }\n\n\n    // pre compile template\n    if (!proto.hasOwnProperty('aNode')) {\n        proto.aNode = createANode();\n\n        var tpl = ComponentClass.template || proto.template;\n        if (tpl) {\n            var aNode = parseTemplate(tpl, {\n                trimWhitespace: proto.trimWhitespace || ComponentClass.trimWhitespace,\n                delimiters: proto.delimiters || ComponentClass.delimiters\n            });\n            var firstChild = aNode.children[0];\n\n            // #[begin] error\n            if (aNode.children.length !== 1 || firstChild.textExpr) {\n                throw new Error('[SAN FATAL] template must have a root element.');\n            }\n            // #[end]\n\n            proto.aNode = firstChild;\n            if (firstChild.tagName === 'template') {\n                firstChild.tagName = null;\n            }\n\n            var componentPropExtra = {\n                'class': {name: 'class', expr: parseText('{{class | _class | _sep(\" \")}}')},\n                'style': {name: 'style', expr: parseText('{{style | _style | _sep(\";\")}}')},\n                'id': {name: 'id', expr: parseText('{{id}}')}\n            };\n\n            var len = firstChild.props.length;\n            while (len--) {\n                var prop = firstChild.props[len];\n                var extra = componentPropExtra[prop.name];\n\n                if (extra) {\n                    firstChild.props.splice(len, 1);\n                    componentPropExtra[prop.name] = prop;\n\n                    if (prop.name !== 'id') {\n                        prop.expr.segs.push(extra.expr.segs[0]);\n                        prop.expr.value = null;\n                    }\n                }\n            }\n\n            firstChild.props.push(\n                componentPropExtra['class'], // eslint-disable-line dot-notation\n                componentPropExtra.style,\n                componentPropExtra.id\n            );\n        }\n    }\n}\n\n// exports = module.exports = compileComponent;\n\n\n/**\n * @file 组件预热\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var each = require('../util/each');\n// var createEl = require('../browser/create-el');\n// var getPropHandler = require('./get-prop-handler');\n// var getANodeProp = require('./get-a-node-prop');\n// var isBrowser = require('../browser/is-browser');\n\n/**\n * 组件预热，分析组件aNode的数据引用等信息\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction componentPreheat(ComponentClass) {\n    var stack = [];\n\n    function recordHotspotData(refs, notContentData) {\n        var len = stack.length;\n        each(stack, function (aNode, index) {\n            if (!notContentData || index !== len - 1) {\n                each(refs, function (ref) {\n                    aNode.hotspot.data[ref] = 1;\n                });\n            }\n        });\n    }\n\n\n    function analyseANodeHotspot(aNode) {\n        if (!aNode.hotspot) {\n            stack.push(aNode);\n\n\n            if (aNode.textExpr) {\n                aNode.hotspot = {data: {}};\n                recordHotspotData(analyseExprDataHotspot(aNode.textExpr));\n            }\n            else {\n                var sourceNode;\n                if (isBrowser && aNode.tagName && !/^(template|slot|select|input|option)$/i.test(aNode.tagName)) {\n                    sourceNode = createEl(aNode.tagName);\n                }\n\n                aNode.hotspot = {\n                    data: {},\n                    dynamicProps: [],\n                    xProps: [],\n                    props: {},\n                    sourceNode: sourceNode\n                };\n\n\n                // === analyse hotspot data: start\n                each(aNode.vars, function (varItem) {\n                    recordHotspotData(analyseExprDataHotspot(varItem.expr));\n                });\n\n                each(aNode.props, function (prop) {\n                    recordHotspotData(analyseExprDataHotspot(prop.expr));\n                });\n\n                /* eslint-disable guard-for-in */\n                for (var key in aNode.directives) {\n                    var directive = aNode.directives[key];\n                    recordHotspotData(analyseExprDataHotspot(directive.value), key !== 'html');\n                }\n                /* eslint-enable guard-for-in */\n\n                each(aNode.elses, function (child) {\n                    analyseANodeHotspot(child);\n                });\n\n                each(aNode.children, function (child) {\n                    analyseANodeHotspot(child);\n                });\n                // === analyse hotspot data: end\n\n\n                // === analyse hotspot props: start\n                each(aNode.props, function (prop, index) {\n                    aNode.hotspot.props[prop.name] = index;\n\n                    if (prop.name === 'id') {\n                        prop.id = true;\n                        aNode.hotspot.idProp = prop;\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                    else if (prop.expr.value != null) {\n                        if (sourceNode) {\n                            getPropHandler(aNode.tagName, prop.name)\n                                .prop(sourceNode, prop.expr.value, prop.name, aNode);\n                        }\n                    }\n                    else {\n                        if (prop.x) {\n                            aNode.hotspot.xProps.push(prop);\n                        }\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                });\n\n                // ie 下，如果 option 没有 value 属性，select.value = xx 操作不会选中 option\n                // 所以没有设置 value 时，默认把 option 的内容作为 value\n                if (aNode.tagName === 'option'\n                    && !getANodeProp(aNode, 'value')\n                    && aNode.children[0]\n                ) {\n                    var valueProp = {\n                        name: 'value',\n                        expr: aNode.children[0].textExpr\n                    };\n                    aNode.props.push(valueProp);\n                    aNode.hotspot.dynamicProps.push(valueProp);\n                    aNode.hotspot.props.value = aNode.props.length - 1;\n                }\n                // === analyse hotspot props: end\n            }\n\n            stack.pop();\n        }\n    }\n\n    analyseANodeHotspot(ComponentClass.prototype.aNode);\n}\n\n/**\n * 分析表达式的数据引用\n *\n * @param {Object} expr 要分析的表达式\n * @return {Array}\n */\nfunction analyseExprDataHotspot(expr) {\n    var refs = [];\n\n    function analyseExprs(exprs) {\n        each(exprs, function (expr) {\n            refs = refs.concat(analyseExprDataHotspot(expr));\n        });\n    }\n\n    switch (expr.type) {\n        case ExprType.ACCESSOR:\n            var paths = expr.paths;\n            refs.push(paths[0].value);\n\n            if (paths.length > 1) {\n                refs.push(paths[0].value + '.' + (paths[1].value || '*'));\n            }\n\n            analyseExprs(paths.slice(1));\n            break;\n\n        case ExprType.UNARY:\n            return analyseExprDataHotspot(expr.expr);\n\n        case ExprType.TEXT:\n        case ExprType.BINARY:\n        case ExprType.TERTIARY:\n            analyseExprs(expr.segs);\n            break;\n\n        case ExprType.INTERP:\n            refs = analyseExprDataHotspot(expr.expr);\n\n            each(expr.filters, function (filter) {\n                analyseExprs(filter.name.paths);\n                analyseExprs(filter.args);\n            });\n\n            break;\n\n    }\n\n    return refs;\n}\n\n// exports = module.exports = componentPreheat;\n\n\n/**\n * @file 将 binds 的 name 从 kebabcase 转换成 camelcase\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var kebab2camel = require('../util/kebab2camel');\n// var each = require('../util/each');\n\n/**\n * 将 binds 的 name 从 kebabcase 转换成 camelcase\n *\n * @param {Array} binds binds集合\n * @return {Array}\n */\nfunction camelComponentBinds(binds) {\n    var result = [];\n    each(binds, function (bind) {\n        result.push({\n            name: kebab2camel(bind.name),\n            expr: bind.expr,\n            x: bind.x,\n            raw: bind.raw\n        });\n    });\n\n    return result;\n}\n\n// exports = module.exports = camelComponentBinds;\n\n\n/**\n * @file 编译源码的 helper 方法集合\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var ExprType = require('../parser/expr-type');\n\n// #[begin] ssr\n// \n// /**\n//  * 编译源码的 helper 方法集合对象\n//  */\n// var compileExprSource = {\n// \n//     /**\n//      * 字符串字面化\n//      *\n//      * @param {string} source 需要字面化的字符串\n//      * @return {string} 字符串字面化结果\n//      */\n//     stringLiteralize: function (source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//                 // .replace( /\\x08/g, '\\\\b' )\n//                 // .replace( /\\x0C/g, '\\\\f' )\n//             + '\"';\n//     },\n// \n//     /**\n//      * 生成数据访问表达式代码\n//      *\n//      * @param {Object?} accessorExpr accessor表达式对象\n//      * @return {string}\n//      */\n//     dataAccess: function (accessorExpr) {\n//         var code = 'componentCtx.data';\n//         if (accessorExpr) {\n//             each(accessorExpr.paths, function (path) {\n//                 if (path.type === ExprType.ACCESSOR) {\n//                     code += '[' + compileExprSource.dataAccess(path) + ']';\n//                     return;\n//                 }\n// \n//                 switch (typeof path.value) {\n//                     case 'string':\n//                         code += '.' + path.value;\n//                         break;\n// \n//                     case 'number':\n//                         code += '[' + path.value + ']';\n//                         break;\n//                 }\n//             });\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成插值代码\n//      *\n//      * @param {Object} interpExpr 插值表达式对象\n//      * @return {string}\n//      */\n//     interp: function (interpExpr) {\n//         var code = compileExprSource.expr(interpExpr.expr);\n// \n// \n//         each(interpExpr.filters, function (filter) {\n//             code = 'componentCtx.callFilter(\"' + filter.name.paths[0].value + '\", [' + code;\n//             each(filter.args, function (arg) {\n//                 code += ', ' + compileExprSource.expr(arg);\n//             });\n//             code += '])';\n//         });\n// \n//         if (!interpExpr.original) {\n//             return 'escapeHTML(' + code + ')';\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成文本片段代码\n//      *\n//      * @param {Object} textExpr 文本片段表达式对象\n//      * @return {string}\n//      */\n//     text: function (textExpr) {\n//         if (textExpr.segs.length === 0) {\n//             return '\"\"';\n//         }\n// \n//         var code = '';\n// \n//         each(textExpr.segs, function (seg) {\n//             var segCode = compileExprSource.expr(seg);\n//             code += code ? ' + ' + segCode : segCode;\n//         });\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 二元表达式操作符映射表\n//      *\n//      * @type {Object}\n//      */\n//     binaryOp: {\n//         /* eslint-disable */\n//         43: '+',\n//         45: '-',\n//         42: '*',\n//         47: '/',\n//         60: '<',\n//         62: '>',\n//         76: '&&',\n//         94: '!=',\n//         121: '<=',\n//         122: '==',\n//         123: '>=',\n//         155: '!==',\n//         183: '===',\n//         248: '||'\n//         /* eslint-enable */\n//     },\n// \n//     /**\n//      * 生成表达式代码\n//      *\n//      * @param {Object} expr 表达式对象\n//      * @return {string}\n//      */\n//     expr: function (expr) {\n//         switch (expr.type) {\n//             case ExprType.UNARY:\n//                 return '!' + compileExprSource.expr(expr.expr);\n// \n//             case ExprType.BINARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + compileExprSource.binaryOp[expr.operator]\n//                     + compileExprSource.expr(expr.segs[1]);\n// \n//             case ExprType.TERTIARY:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + '?' + compileExprSource.expr(expr.segs[1])\n//                     + ':' + compileExprSource.expr(expr.segs[2]);\n// \n//             case ExprType.STRING:\n//                 return compileExprSource.stringLiteralize(expr.literal || expr.value);\n// \n//             case ExprType.NUMBER:\n//                 return expr.value;\n// \n//             case ExprType.BOOL:\n//                 return expr.value ? 'true' : 'false';\n// \n//             case ExprType.ACCESSOR:\n//                 return compileExprSource.dataAccess(expr);\n// \n//             case ExprType.INTERP:\n//                 return compileExprSource.interp(expr);\n// \n//             case ExprType.TEXT:\n//                 return compileExprSource.text(expr);\n//         }\n//     }\n// };\n// #[end]\n\n// exports = module.exports = compileExprSource;\n\n\n/**\n * @file 编译源码的中间buffer类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var compileExprSource = require('./compile-expr-source');\n\n\n// #[begin] ssr\n// /**\n//  * 编译源码的中间buffer类\n//  *\n//  * @class\n//  */\n// function CompileSourceBuffer() {\n//     this.segs = [];\n// }\n// \n// /**\n//  * 添加原始代码，将原封不动输出\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.addRaw = function (code) {\n//     this.segs.push({\n//         type: 'RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的原始代码\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.joinRaw = function (code) {\n//     this.segs.push({\n//         type: 'JOIN_RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加renderer方法的起始源码\n//  */\n// CompileSourceBuffer.prototype.addRendererStart = function () {\n//     this.addRaw('function (data, parentCtx, givenSlots) {');\n//     this.addRaw('var html = \"\";');\n// };\n// \n// /**\n//  * 添加renderer方法的结束源码\n//  */\n// CompileSourceBuffer.prototype.addRendererEnd = function () {\n//     this.addRaw('return html;');\n//     this.addRaw('}');\n// };\n// \n// /**\n//  * 添加被拼接为html的静态字符串\n//  *\n//  * @param {string} str 被拼接的字符串\n//  */\n// CompileSourceBuffer.prototype.joinString = function (str) {\n//     this.segs.push({\n//         str: str,\n//         type: 'JOIN_STRING'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的数据访问\n//  *\n//  * @param {Object?} accessor 数据访问表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinDataStringify = function () {\n//     this.segs.push({\n//         type: 'JOIN_DATA_STRINGIFY'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的表达式\n//  *\n//  * @param {Object} expr 表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinExpr = function (expr) {\n//     this.segs.push({\n//         expr: expr,\n//         type: 'JOIN_EXPR'\n//     });\n// };\n// \n// /**\n//  * 生成编译后代码\n//  *\n//  * @return {string}\n//  */\n// CompileSourceBuffer.prototype.toCode = function () {\n//     var code = [];\n//     var temp = '';\n// \n//     function genStrLiteral() {\n//         if (temp) {\n//             code.push('html += ' + compileExprSource.stringLiteralize(temp) + ';');\n//         }\n// \n//         temp = '';\n//     }\n// \n//     each(this.segs, function (seg) {\n//         if (seg.type === 'JOIN_STRING') {\n//             temp += seg.str;\n//             return;\n//         }\n// \n//         genStrLiteral();\n//         switch (seg.type) {\n//             case 'JOIN_DATA_STRINGIFY':\n//                 code.push('html += stringifier.any(' + compileExprSource.dataAccess() + ');');\n//                 break;\n// \n//             case 'JOIN_EXPR':\n//                 code.push('html += ' + compileExprSource.expr(seg.expr) + ';');\n//                 break;\n// \n//             case 'JOIN_RAW':\n//                 code.push('html += ' + seg.code + ';');\n//                 break;\n// \n//             case 'RAW':\n//                 code.push(seg.code);\n//                 break;\n// \n//         }\n//     });\n// \n//     genStrLiteral();\n// \n//     return code.join('\\n');\n// };\n// \n// #[end]\n\n// exports = module.exports = CompileSourceBuffer;\n\n\n/**\n * @file 将组件编译成 render 方法的 js 源码\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var parseExpr = require('../parser/parse-expr');\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n// var autoCloseTags = require('../browser/auto-close-tags');\n// var CompileSourceBuffer = require('./compile-source-buffer');\n// var compileExprSource = require('./compile-expr-source');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var getANodeProp = require('./get-a-node-prop');\n\n// #[begin] ssr\n// \n// /**\n//  * 生成序列化时起始桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @param {string?} content 桩内的内容\n//  * @return {string}\n//  */\n// function serializeStump(type, content) {\n//     return '<!--s-' + type + (content ? ':' + content : '') + '-->';\n// }\n// \n// /**\n//  * 生成序列化时结束桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @return {string}\n//  */\n// function serializeStumpEnd(type) {\n//     return '<!--/s-' + type + '-->';\n// }\n// \n// /**\n//  * element 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var elementSourceCompiler = {\n// \n//     /* eslint-disable max-params */\n//     /**\n//      * 编译元素标签头\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      * @param {Array} props 属性列表\n//      * @param {string?} extraProp 额外的属性串\n//      * @param {boolean?} isClose 是否闭合\n//      */\n//     tagStart: function (sourceBuffer, tagName, props, extraProp, isClose) {\n//         sourceBuffer.joinString('<' + tagName);\n//         sourceBuffer.joinString(extraProp || '');\n// \n//         // index list\n//         var propsIndex = {};\n//         each(props, function (prop) {\n//             propsIndex[prop.name] = prop;\n//         });\n// \n//         each(props, function (prop) {\n//             if (prop.name === 'slot') {\n//                 return;\n//             }\n// \n//             if (prop.name === 'value') {\n//                 switch (tagName) {\n//                     case 'textarea':\n//                         return;\n// \n//                     case 'select':\n//                         sourceBuffer.addRaw('$selectValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ' || \"\";'\n//                         );\n//                         return;\n// \n//                     case 'option':\n//                         sourceBuffer.addRaw('$optionValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ';'\n//                         );\n//                         // value\n//                         sourceBuffer.addRaw('if ($optionValue != null) {');\n//                         sourceBuffer.joinRaw('\" value=\\\\\"\" + $optionValue + \"\\\\\"\"');\n//                         sourceBuffer.addRaw('}');\n// \n//                         // selected\n//                         sourceBuffer.addRaw('if ($optionValue === $selectValue) {');\n//                         sourceBuffer.joinString(' selected');\n//                         sourceBuffer.addRaw('}');\n//                         return;\n//                 }\n//             }\n// \n//             switch (prop.name) {\n//                 case 'readonly':\n//                 case 'disabled':\n//                 case 'multiple':\n//                     if (prop.raw === '') {\n//                         sourceBuffer.joinString(' ' + prop.name);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('boolAttrFilter(\"' + prop.name + '\", '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n// \n//                 case 'checked':\n//                     if (tagName === 'input') {\n//                         var valueProp = propsIndex.value;\n//                         var valueCode = compileExprSource.expr(valueProp.expr);\n// \n//                         if (valueProp) {\n//                             switch (propsIndex.type.raw) {\n//                                 case 'checkbox':\n//                                     sourceBuffer.addRaw('if (contains('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ', '\n//                                         + valueCode\n//                                         + ')) {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n// \n//                                 case 'radio':\n//                                     sourceBuffer.addRaw('if ('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ' === '\n//                                         + valueCode\n//                                         + ') {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n//                             }\n//                         }\n//                     }\n//                     break;\n// \n//                 default:\n//                     if (prop.attr) {\n//                         sourceBuffer.joinString(' ' + prop.attr);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('attrFilter(\"' + prop.name + '\", '\n//                             + (prop.x ? 'escapeHTML(' : '')\n//                             + compileExprSource.expr(prop.expr)\n//                             + (prop.x ? ')' : '')\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n//             }\n//         });\n// \n//         sourceBuffer.joinString(isClose ? '/>' : '>');\n//     },\n//     /* eslint-enable max-params */\n// \n//     /**\n//      * 编译元素闭合\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      */\n//     tagEnd: function (sourceBuffer, tagName) {\n//         if (!autoCloseTags[tagName]) {\n//             sourceBuffer.joinString('</' + tagName + '>');\n//         }\n// \n//         if (tagName === 'select') {\n//             sourceBuffer.addRaw('$selectValue = null;');\n//         }\n// \n//         if (tagName === 'option') {\n//             sourceBuffer.addRaw('$optionValue = null;');\n//         }\n//     },\n// \n//     /**\n//      * 编译元素内容\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {ANode} aNode 元素的抽象节点信息\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     inner: function (sourceBuffer, aNode, owner) {\n//         // inner content\n//         if (aNode.tagName === 'textarea') {\n//             var valueProp = getANodeProp(aNode, 'value');\n//             if (valueProp) {\n//                 sourceBuffer.joinRaw('escapeHTML('\n//                     + compileExprSource.expr(valueProp.expr)\n//                     + ')'\n//                 );\n//             }\n// \n//             return;\n//         }\n// \n//         var htmlDirective = aNode.directives.html;\n//         if (htmlDirective) {\n//             sourceBuffer.joinExpr(htmlDirective.value);\n//         }\n//         else {\n//             /* eslint-disable no-use-before-define */\n//             each(aNode.children, function (aNodeChild) {\n//                 sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//             });\n//             /* eslint-enable no-use-before-define */\n//         }\n//     }\n// };\n// \n// /**\n//  * ANode 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var aNodeCompiler = {\n// \n//     /**\n//      * 编译节点\n//      *\n//      * @param {ANode} aNode 抽象节点\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compile: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         var compileMethod = 'compileElement';\n// \n//         if (aNode.textExpr) {\n//             compileMethod = 'compileText';\n//         }\n//         else if (aNode.directives['if']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileIf';\n//         }\n//         else if (aNode.directives['for']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileFor';\n//         }\n//         else if (aNode.tagName === 'slot') {\n//             compileMethod = 'compileSlot';\n//         }\n//         else if (aNode.tagName === 'template') {\n//             compileMethod = 'compileTemplate';\n//         }\n//         else {\n//             var ComponentType = owner.getComponentType(aNode);\n//             if (ComponentType) {\n//                 compileMethod = 'compileComponent';\n//                 extra.ComponentClass = ComponentType;\n//             }\n//         }\n// \n//         aNodeCompiler[compileMethod](aNode, sourceBuffer, owner, extra);\n//     },\n// \n//     /**\n//      * 编译文本节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      */\n//     compileText: function (aNode, sourceBuffer) {\n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStump('text'));\n//         }\n// \n//         sourceBuffer.joinExpr(aNode.textExpr);\n// \n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStumpEnd('text'));\n//         }\n//     },\n// \n//     /**\n//      * 编译template节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileTemplate: function (aNode, sourceBuffer, owner) {\n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//     },\n// \n//     /**\n//      * 编译 if 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileIf: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('var ifIndex = null;');\n// \n//         // output main if\n//         var ifDirective = aNode.directives['if']; // eslint-disable-line dot-notation\n//         sourceBuffer.addRaw('if (' + compileExprSource.expr(ifDirective.value) + ') {');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 rinseCondANode(aNode),\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         // output elif and else\n//         each(aNode.elses, function (elseANode, index) {\n//             var elifDirective = elseANode.directives.elif;\n//             if (elifDirective) {\n//                 sourceBuffer.addRaw('else if (' + compileExprSource.expr(elifDirective.value) + ') {');\n//             }\n//             else {\n//                 sourceBuffer.addRaw('else {');\n//             }\n// \n//             sourceBuffer.addRaw(\n//                 aNodeCompiler.compile(\n//                     rinseCondANode(elseANode),\n//                     sourceBuffer,\n//                     owner\n//                 )\n//             );\n//             sourceBuffer.addRaw('}');\n//         });\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译 for 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileFor: function (aNode, sourceBuffer, owner) {\n//         var forElementANode = createANode({\n//             children: aNode.children,\n//             props: aNode.props,\n//             events: aNode.events,\n//             tagName: aNode.tagName,\n//             directives: cloneDirectives(aNode.directives, {\n//                 'for': 1\n//             }),\n//             hotspot: aNode.hotspot\n//         });\n// \n//         var forDirective = aNode.directives['for']; // eslint-disable-line dot-notation\n//         var itemName = forDirective.item.raw;\n//         var indexName = forDirective.index.raw;\n//         var listName = compileExprSource.dataAccess(forDirective.value);\n// \n//         if (indexName === '$index') {\n//             indexName = guid();\n//         }\n// \n//         sourceBuffer.addRaw('for ('\n//             + 'var ' + indexName + ' = 0; '\n//             + indexName + ' < ' + listName + '.length; '\n//             + indexName + '++) {'\n//         );\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n//     },\n// \n//     /**\n//      * 编译 slot 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileSlot: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('function $defaultSlotRender(componentCtx) {');\n//         sourceBuffer.addRaw('  var html = \"\";');\n//         each(aNode.children, function (aNodeChild) {\n//             sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//         });\n//         sourceBuffer.addRaw('  return html;');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('  var $givenSlot = [];');\n// \n//         var nameProp = getANodeProp(aNode, 'name');\n//         if (nameProp) {\n//             sourceBuffer.addRaw('var $slotName = ' + compileExprSource.expr(nameProp.expr) + ';');\n//         }\n//         else {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//         }\n// \n//         sourceBuffer.addRaw('var $ctxGivenSlots = componentCtx.givenSlots;');\n//         sourceBuffer.addRaw('for (var $i = 0; $i < $ctxGivenSlots.length; $i++) {');\n//         sourceBuffer.addRaw('  if ($ctxGivenSlots[$i][1] == $slotName) {');\n//         sourceBuffer.addRaw('    $givenSlot.push($ctxGivenSlots[$i][0]);');\n//         sourceBuffer.addRaw('  }');\n//         sourceBuffer.addRaw('}');\n// \n// \n//         sourceBuffer.addRaw('var $isInserted = $givenSlot.length > 0;');\n//         sourceBuffer.addRaw('if (!$isInserted) { $givenSlot.push($defaultSlotRender); }');\n// \n//         sourceBuffer.addRaw('var $slotCtx = $isInserted ? componentCtx.owner : componentCtx;');\n//         if (aNode.vars) {\n//             sourceBuffer.addRaw('$slotCtx = {data: extend({}, $slotCtx.data), filters: $slotCtx.filters, callFilter: $slotCtx.callFilter};'); // eslint-disable-line\n//             each(aNode.vars, function (varItem) {\n//                 sourceBuffer.addRaw(\n//                     '$slotCtx.data[\"' + varItem.name + '\"] = '\n//                     + compileExprSource.expr(varItem.expr)\n//                     + ';'\n//                 );\n//             });\n//         }\n// \n//         sourceBuffer.addRaw('for (var $renderIndex = 0; $renderIndex < $givenSlot.length; $renderIndex++) {');\n//         sourceBuffer.addRaw('  html += $givenSlot[$renderIndex]($slotCtx);');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译普通节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compileElement: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         // if (aNode.tagName === 'option'\n//         //     && !getANodeProp(aNode, 'value')\n//         //     && aNode.children[0]\n//         // ) {\n//         //     aNode.props.push({\n//         //         name: 'value',\n//         //         expr: aNode.children[0].textExpr\n//         //     });\n//         // }\n// \n//         elementSourceCompiler.tagStart(\n//             sourceBuffer,\n//             aNode.tagName,\n//             aNode.props,\n//             extra.prop\n//         );\n// \n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//         elementSourceCompiler.tagEnd(sourceBuffer, aNode.tagName);\n//     },\n// \n//     /**\n//      * 编译组件节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      * @param {Function} extra.ComponentClass 对应组件类\n//      */\n//     compileComponent: function (aNode, sourceBuffer, owner, extra) {\n//         if (aNode) {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//             sourceBuffer.addRaw('var $givenSlots = [];');\n//             each(aNode.children, function (child) {\n//                 var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n//                 if (slotBind) {\n//                     sourceBuffer.addRaw('$slotName = ' + compileExprSource.expr(slotBind.expr) + ';');\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}, $slotName]);');\n//                 }\n//                 else {\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}]);');\n//                 }\n//             });\n//         }\n// \n//         var ComponentClass = extra.ComponentClass;\n//         var component = new ComponentClass({\n//             aNode: aNode,\n//             owner: owner,\n//             subTag: aNode.tagName\n//         });\n// \n//         var givenData = [];\n// \n//         each(component.binds, function (prop) {\n//             givenData.push(\n//                 compileExprSource.stringLiteralize(prop.name)\n//                 + ':'\n//                 + compileExprSource.expr(prop.expr)\n//             );\n//         });\n// \n//         sourceBuffer.addRaw('html += (');\n//         sourceBuffer.addRendererStart();\n//         compileComponentSource(sourceBuffer, component, extra && extra.prop);\n//         sourceBuffer.addRendererEnd();\n//         sourceBuffer.addRaw(')({' + givenData.join(',\\n') + '}, componentCtx, $givenSlots);');\n//         sourceBuffer.addRaw('$givenSlots = null;');\n//     }\n// };\n// /* eslint-disable guard-for-in */\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//  * @param {Object} component 组件实例\n//  * @param {string?} extraProp 额外的属性串\n//  */\n// function compileComponentSource(sourceBuffer, component, extraProp) {\n//     sourceBuffer.addRaw(genComponentContextCode(component));\n//     sourceBuffer.addRaw('componentCtx.owner = parentCtx;');\n//     sourceBuffer.addRaw('componentCtx.givenSlots = givenSlots;');\n// \n// \n//     sourceBuffer.addRaw('data = extend(componentCtx.data, data);');\n//     sourceBuffer.addRaw('for (var $i = 0; $i < componentCtx.computedNames.length; $i++) {');\n//     sourceBuffer.addRaw('  var $computedName = componentCtx.computedNames[$i];');\n//     sourceBuffer.addRaw('  data[$computedName] = componentCtx.computed[$computedName]();');\n//     sourceBuffer.addRaw('}');\n// \n//     extraProp = extraProp || '';\n// \n//     var eventDeclarations = [];\n//     for (var key in component.listeners) {\n//         each(component.listeners[key], function (listener) {\n//             if (listener.declaration) {\n//                 eventDeclarations.push(listener.declaration);\n//             }\n//         });\n//     }\n// \n//     elementSourceCompiler.tagStart(\n//         sourceBuffer,\n//         component.tagName,\n//         component.aNode.props,\n//         extraProp\n//     );\n// \n//     if (!component.owner) {\n//         sourceBuffer.joinString('<!--s-data:');\n//         sourceBuffer.joinDataStringify();\n//         sourceBuffer.joinString('-->');\n//     }\n// \n// \n// \n//     elementSourceCompiler.inner(sourceBuffer, component.aNode, component);\n//     elementSourceCompiler.tagEnd(sourceBuffer, component.tagName);\n// }\n// \n// var stringifier = {\n//     obj: function (source) {\n//         var prefixComma;\n//         var result = '{';\n// \n//         for (var key in source) {\n//             if (typeof source[key] === 'undefined') {\n//                 continue;\n//             }\n// \n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += compileExprSource.stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//         }\n// \n//         return result + '}';\n//     },\n// \n//     arr: function (source) {\n//         var prefixComma;\n//         var result = '[';\n// \n//         each(source, function (value) {\n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += stringifier.any(value);\n//         });\n// \n//         return result + ']';\n//     },\n// \n//     str: function (source) {\n//         return compileExprSource.stringLiteralize(source);\n//     },\n// \n//     date: function (source) {\n//         return 'new Date(' + source.getTime() + ')';\n//     },\n// \n//     any: function (source) {\n//         switch (typeof source) {\n//             case 'string':\n//                 return stringifier.str(source);\n// \n//             case 'number':\n//                 return '' + source;\n// \n//             case 'boolean':\n//                 return source ? 'true' : 'false';\n// \n//             case 'object':\n//                 if (!source) {\n//                     return null;\n//                 }\n// \n//                 if (source instanceof Array) {\n//                     return stringifier.arr(source);\n//                 }\n// \n//                 if (source instanceof Date) {\n//                     return stringifier.date(source);\n//                 }\n// \n//                 return stringifier.obj(source);\n//         }\n// \n//         throw new Error('Cannot Stringify:' + source);\n//     }\n// };\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {Object} component 组件实例\n//  * @return {string}\n//  */\n// function genComponentContextCode(component) {\n//     var code = ['var componentCtx = {'];\n// \n//     // given anode\n//     code.push('givenSlots: [],');\n// \n//     // filters\n//     code.push('filters: {');\n//     var filterCode = [];\n//     for (var key in component.filters) {\n//         var filter = component.filters[key];\n// \n//         if (typeof filter === 'function') {\n//             filterCode.push(key + ': ' + filter.toString());\n//         }\n//     }\n//     code.push(filterCode.join(','));\n//     code.push('},');\n// \n//     code.push(\n//         'callFilter: function (name, args) {',\n//         '    var filter = this.filters[name] || DEFAULT_FILTERS[name];',\n//         '    if (typeof filter === \"function\") {',\n//         '        return filter.apply(this, args);',\n//         '    }',\n//         '},'\n//     );\n// \n//     /* eslint-disable no-redeclare */\n//     // computed obj\n//     code.push('computed: {');\n//     var computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push(key + ': '\n//                 + computed.toString().replace(\n//                     /this.data.get\\(([^\\)]+)\\)/g,\n//                     function (match, exprLiteral) {\n//                         var exprStr = (new Function('return ' + exprLiteral))();\n//                         var expr = parseExpr(exprStr);\n// \n//                         return compileExprSource.expr(expr);\n//                     })\n//             );\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('},');\n// \n//     // computed names\n//     code.push('computedNames: [');\n//     computedCode = [];\n//     for (var key in component.computed) {\n//         var computed = component.computed[key];\n// \n//         if (typeof computed === 'function') {\n//             computedCode.push('\"' + key + '\"');\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('],');\n//     /* eslint-enable no-redeclare */\n// \n//     // data\n//     code.push('data: ' + stringifier.any(component.data.get()) + ',');\n// \n//     // tagName\n//     code.push('tagName: \"' + component.tagName + '\"');\n//     code.push('};');\n// \n//     return code.join('\\n');\n// }\n// \n// /* eslint-enable guard-for-in */\n// \n// /* eslint-disable no-unused-vars */\n// /* eslint-disable fecs-camelcase */\n// \n// /**\n//  * 组件编译的模板函数\n//  *\n//  * @inner\n//  */\n// function componentCompilePreCode() {\n//     var $version = '3.5.7';\n// \n//     function extend(target, source) {\n//         if (source) {\n//             Object.keys(source).forEach(function (key) {\n//                 let value = source[key];\n//                 if (typeof value !== 'undefined') {\n//                     target[key] = value;\n//                 }\n//             });\n//         }\n// \n//         return target;\n//     }\n// \n//     function each(array, iterator) {\n//         if (array && array.length > 0) {\n//             for (var i = 0, l = array.length; i < l; i++) {\n//                 if (iterator(array[i], i) === false) {\n//                     break;\n//                 }\n//             }\n//         }\n//     }\n// \n//     function contains(array, value) {\n//         var result;\n//         each(array, function (item) {\n//             result = item === value;\n//             return !result;\n//         });\n// \n//         return result;\n//     }\n// \n//     var HTML_ENTITY = {\n//         /* jshint ignore:start */\n//         '&': '&amp;',\n//         '<': '&lt;',\n//         '>': '&gt;',\n//         '\"': '&quot;',\n//         /* eslint-disable quotes */\n//         \"'\": '&#39;'\n//         /* eslint-enable quotes */\n//         /* jshint ignore:end */\n//     };\n// \n//     function htmlFilterReplacer(c) {\n//         return HTML_ENTITY[c];\n//     }\n// \n//     function escapeHTML(source) {\n//         if (source == null) {\n//             return '';\n//         }\n// \n//         return String(source).replace(/[&<>\"']/g, htmlFilterReplacer);\n//     }\n// \n//     var DEFAULT_FILTERS = {\n//         url: encodeURIComponent,\n//         _class: function (source) {\n//             if (source instanceof Array) {\n//                 return source.join(' ');\n//             }\n// \n//             return source;\n//         },\n//         _style: function (source) {\n//             if (typeof source === 'object') {\n//                 var result = '';\n//                 if (source) {\n//                     Object.keys(source).forEach(function (key) {\n//                         result += key + ':' + source[key] + ';';\n//                     });\n//                 }\n// \n//                 return result;\n//             }\n// \n//             return source || '';\n//         },\n//         _sep: function (source, sep) {\n//             return source ? sep + source : '';\n//         }\n//     };\n// \n//     function attrFilter(name, value) {\n//         if (value) {\n//             return ' ' + name + '=\"' + value + '\"';\n//         }\n// \n//         return '';\n//     }\n// \n//     function boolAttrFilter(name, value) {\n//         if (value && value !== 'false' && value !== '0') {\n//             return ' ' + name;\n//         }\n// \n//         return '';\n//     }\n// \n//     function stringLiteralize(source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//             + '\"';\n//     }\n// \n//     var stringifier = {\n//         obj: function (source) {\n//             var prefixComma;\n//             var result = '{';\n// \n//             Object.keys(source).forEach(function (key) {\n//                 if (typeof source[key] === 'undefined') {\n//                     return;\n//                 }\n// \n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//             });\n// \n//             return result + '}';\n//         },\n// \n//         arr: function (source) {\n//             var prefixComma;\n//             var result = '[';\n// \n//             each(source, function (value) {\n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringifier.any(value);\n//             });\n// \n//             return result + ']';\n//         },\n// \n//         str: function (source) {\n//             return stringLiteralize(source);\n//         },\n// \n//         date: function (source) {\n//             return 'new Date(' + source.getTime() + ')';\n//         },\n// \n//         any: function (source) {\n//             switch (typeof source) {\n//                 case 'string':\n//                     return stringifier.str(source);\n// \n//                 case 'number':\n//                     return '' + source;\n// \n//                 case 'boolean':\n//                     return source ? 'true' : 'false';\n// \n//                 case 'object':\n//                     if (!source) {\n//                         return null;\n//                     }\n// \n//                     if (source instanceof Array) {\n//                         return stringifier.arr(source);\n//                     }\n// \n//                     if (source instanceof Date) {\n//                         return stringifier.date(source);\n//                     }\n// \n//                     return stringifier.obj(source);\n//             }\n// \n//             throw new Error('Cannot Stringify:' + source);\n//         }\n//     };\n// }\n// /* eslint-enable no-unused-vars */\n// /* eslint-enable fecs-camelcase */\n// \n// /**\n//  * 将组件编译成 render 方法的 js 源码\n//  *\n//  * @param {Function} ComponentClass 组件类\n//  * @return {string}\n//  */\n// function compileJSSource(ComponentClass) {\n//     var sourceBuffer = new CompileSourceBuffer();\n// \n//     sourceBuffer.addRendererStart();\n//     sourceBuffer.addRaw(\n//         componentCompilePreCode.toString()\n//             .split('\\n')\n//             .slice(1)\n//             .join('\\n')\n//             .replace(/\\}\\s*$/, '')\n//     );\n// \n//     // 先初始化个实例，让模板编译成 ANode，并且能获得初始化数据\n//     var component = new ComponentClass();\n// \n//     compileComponentSource(sourceBuffer, component);\n//     sourceBuffer.addRendererEnd();\n//     return sourceBuffer.toCode();\n// }\n// #[end]\n\n// exports = module.exports = compileJSSource;\n\n    /* eslint-disable no-unused-vars */\n//     var nextTick = require('./util/next-tick');\n//     var inherits = require('./util/inherits');\n//     var parseTemplate = require('./parser/parse-template');\n//     var parseExpr = require('./parser/parse-expr');\n//     var ExprType = require('./parser/expr-type');\n//     var LifeCycle = require('./view/life-cycle');\n//     var NodeType = require('./view/node-type');\n//     var Component = require('./view/component');\n//     var compileComponent = require('./view/compile-component');\n//     var defineComponent = require('./view/define-component');\n//     var emitDevtool = require('./util/emit-devtool');\n//     var compileJSSource = require('./view/compile-js-source');\n//     var Data = require('./runtime/data');\n//     var evalExpr = require('./runtime/eval-expr');\n//     var DataTypes = require('./util/data-types');\n\n\n    var san = {\n        /**\n         * san版本号\n         *\n         * @type {string}\n         */\n        version: '3.5.7',\n\n        // #[begin] devtool\n        /**\n         * 是否开启调试。开启调试时 devtool 会工作\n         *\n         * @type {boolean}\n         */\n        debug: true,\n        // #[end]\n\n        // #[begin] ssr\n//         /**\n//          * 将组件类编译成 renderer 方法\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {function(Object):string}\n//          */\n//         compileToRenderer: function (ComponentClass) {\n//             var renderer = ComponentClass.__ssrRenderer;\n// \n//             if (!renderer) {\n//                 var code = compileJSSource(ComponentClass);\n//                 renderer = (new Function('return ' + code))();\n//                 ComponentClass.__ssrRenderer = renderer;\n//             }\n// \n//             return renderer;\n//         },\n// \n//         /**\n//          * 将组件类编译成 renderer 方法的源文件\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {string}\n//          */\n//         compileToSource: compileJSSource,\n        // #[end]\n\n        /**\n         * 组件基类\n         *\n         * @type {Function}\n         */\n        Component: Component,\n\n        /**\n         * 创建组件类\n         *\n         * @param {Object} proto 组件类的方法表\n         * @return {Function}\n         */\n        defineComponent: defineComponent,\n\n        /**\n         * 编译组件类。预解析template和components\n         *\n         * @param {Function} ComponentClass 组件类\n         */\n        compileComponent: compileComponent,\n\n        /**\n         * 解析 template\n         *\n         * @inner\n         * @param {string} source template 源码\n         * @return {ANode}\n         */\n        parseTemplate: parseTemplate,\n\n        /**\n         * 解析表达式\n         *\n         * @param {string} source 源码\n         * @return {Object}\n         */\n        parseExpr: parseExpr,\n\n        /**\n         * 表达式类型枚举\n         *\n         * @const\n         * @type {Object}\n         */\n        ExprType: ExprType,\n\n        /**\n         * 生命周期\n         */\n        LifeCycle: LifeCycle,\n\n        /**\n         * 节点类型\n         *\n         * @const\n         * @type {Object}\n         */\n        NodeType: NodeType,\n\n        /**\n         * 在下一个更新周期运行函数\n         *\n         * @param {Function} fn 要运行的函数\n         */\n        nextTick: nextTick,\n\n        /**\n         * 数据类\n         *\n         * @class\n         * @param {Object?} data 初始数据\n         * @param {Data?} parent 父级数据对象\n         */\n        Data: Data,\n\n        /**\n         * 计算表达式的值\n         *\n         * @param {Object} expr 表达式对象\n         * @param {Data} data 数据对象\n         * @param {Component=} owner 组件对象，用于表达式中filter的执行\n         * @return {*}\n         */\n        evalExpr: evalExpr,\n\n        /**\n         * 构建类之间的继承关系\n         *\n         * @param {Function} subClass 子类函数\n         * @param {Function} superClass 父类函数\n         */\n        inherits: inherits,\n\n        /**\n         * DataTypes\n         *\n         * @type {Object}\n         */\n        DataTypes: DataTypes\n    };\n\n    // export\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = san;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('san', [], san);\n    }\n    else {\n        // For <script src=\"...\"\n        root.san = san;\n    }\n\n    // #[begin] devtool\n    emitDevtool.start(san);\n    // #[end]\n})(this);\n","\nimport san from 'san';\nimport printMe from './print.js'\nimport './style.css'\n\nconst MyApp = san.defineComponent({\n    template: `\n        <div>\n            <button>Click me</button>\n            <input type=\"text\" value=\"{=name=}\">\n            <p>Hello {{name}}!</p>\n        </div>\n    `\n});\n\nlet myApp = new MyApp({\n    data: {\n        name: 'San'\n    }\n});\nprintMe();\nmyApp.attach(document.body);\nif (module.hot) {\n    module.hot.accept('./print.js', function() {\n        console.log('Accepting the updated printMe module!');\n        printMe();\n    })\n}"],"sourceRoot":""}